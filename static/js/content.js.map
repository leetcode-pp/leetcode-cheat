{"version":3,"sources":["../webpack/bootstrap","locales/zh.js","locales/en.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","utils.js","constant/index.js","locales/index.js","submission/hideFailCases.js","contentScript.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","preview","copyMdOrigin","fullScreen","toUse","custom","presets","setLang","changeLang","copy","save","yes","no","delete","delTitle","deleteSuccess","saveSuccess","copySuccess","article","recommendedQuestions","goForDictation","contribution","back","viewSolution","viewInHandpickCollection","notCollected","allCollected","writingExplanation","goToTheWebsiteToUse","checkTips","checkBtn","selfIntroduction","allSolutions","columns","title","tag","initializeContentScriptFailed","run","submit","wirteSolution","visualizationDebug","linkedListCommnet","visualDebugComment","visualDebugSupport","getProblemError","savingProblem","githubAPIError","notYet","problem","3","10","34","39","40","44","46","47","52","62","63","64","69","70","72","76","78","90","113","116","131","140","148","174","198","208","209","211","212","233","278","292","303","307","3187","327","322","337","357","399","416","438","464","472","493","513","518","528","540","547","576","648","662","698","721","743","778","808","816","820","837","863","877","902","904","912","930","935","990","992","1004","1015","1032","1046","1202","1109","1140","1234","1248","1255","1314","1406","1462","1480","1510","1563","1584","1649","1681","1686","1690","1886","2536","2569","2736","2867","minimumLightRadius","minimumLightRadius_desc","kthPairDistance","kthPairDistance_desc","increasingDigits","palindromicInsertions","palindromicInsertions_desc","JZ51","interview17_13","interview17_13__desc","longestIncreasingSubsequence","longestIncreasingSubsequence_desc","littleRabbitsChessboard","shopeesOffice","codeTemplate","perSum","tips","item1","item2","item3","item4","graph","item1_desc1","item1_desc2","item5","item6","binarySearch","BFS","heap","slidingWindow","item1_text","item2_text","backtrack","trie","uf","segmentTree","handWriting","rotate","prime","suffixArray","moreTemplate","dataStructureVisualization","incrementalUsage","explain1","explain2","explain3","explain4","explanationTemplate","code","problemAddress","problemDesc","preKnowledge","company","thinking","keyPoints","languageSupport","complexityAnalysis","complexityDeclare","timeComplexity","spaceComplexity","howToUse","programmingLanguage","commonFormulas","noBackup","restore","backupTips","afterUpdateTemplateTips","afterUpdateThemeTips","complexityQuickCheck","dataScale","learningRoute","binarySearchDesc","binarySearch_item1","binarySearch_item1_text","binarySearch_item1_keys","binarySearch_item2","binarySearch_item2_keys","binarySearch_item3","binarySearch_item3_keys","binarySearch_item4","binarySearch_item4_keys","binarySearch_item5","binarySearch_item5_keys","dp","dp_desc","dp_item1","dp_item1_keys1","dp_item1_keys2","dp_item1_keys3","dp_item2","dp_item2_keys1","dp_item2_keys2","dp_item2_keys3","dp_item3","dp_item3_keys1","dp_item3_keys2","dp_item3_keys3","dp_item4","dp_item5","dp_item5_keys1","dp_item6","dp_item7","dp_item8","dp_item8_keys1","dp_item8_keys2","dp_item9","tree","linkedList","clickToEnlarge","recommendedProblems","checkForUpdates","aboutMe","_defineProperty","obj","configurable","writable","_createForOfIteratorHelper","iterator","Array","isArray","unsupportedIterableToArray","F","length","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","copyToClipboard","str","el","document","createElement","body","appendChild","select","execCommand","removeChild","isInExtension","process","REACT_APP_BUILD_TARGET","getUrlParameter","URLSearchParams","window","location","search","uuidv4","replace","Math","random","toString","text","cb","copyFrom","textContent","blur","Function","getStorage","k","Promise","resolve","reject","chrome","storage","localStorage","result","JSON","parse","getItem","setStorage","v","sync","set","setItem","stringify","console","log","setCloundStorage","content","_ref4","token","fetch","method","headers","customer","address","then","res","json","getCloundStorage","id","_ref5","concat","response","order","debounce","fn","wait","callback","timerId","context","this","args","arguments","clearTimeout","setTimeout","apply","getForPath","path","_step2","_iterator2","split","LEETCODE_CN_URL","LEETCODE_URL","ISSUES_URL","CONTRIBUTE_COMPANY_URL","CONTRIBUTE_PROGRAMMING_LANGUAGE_URL","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","isInit","lang","ALL_LANGS","zh","en","_lang","initLang","_ref","_asyncToGenerator","_callee","currentUrl","isEnHref","_context","includes","_x","getLeetcodeUrlForLang","keypath","slotText","langData","Locale","item","idx","submissionDOM","querySelector","children","getAttribute","input","output","expect","style","display","showFailCases","showFailCasesTip","innerText","showFailCasesButton","onclick","insertBefore","hideFailCases","documentLang","documentElement","tt","message","_ref2","alert","goToVisDebug","_window","_window$monaco","_window$monaco$editor","_window$monaco$editor2","language","getCodeLanguage","supportedLanguages","prefixMap","Python3","JavaScript","java","C","suffixMap","Java","join","monaco","editor","getModels","getValue","open","encodeURIComponent","_window2","_window2$monaco","_window2$monaco$edito","_window2$monaco$edito2","cpp","python3","javascript","getLanguageId","toLowerCase","inserted","retried","submitProxied","setInterval","clearInterval","customBtnStyle","cursor","buttons","querySelectorAll","_loop","writeSolutionButton","assign","className","_window3","_window3$monaco","_window3$monaco$edito","_window3$monaco$edito2","innerHTML","link","href","hide","setAttribute","removeAttribute","raw","visDebugButton","parentElement","prepend","click","originalFn","_len","_key","tries","hideFailCasesJob","insertButton","asyncGeneratorStep","gen","_next","_throw","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","from","test"],"mappings":"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","file":"static/js/content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/leetcode-cheat/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 653);\n","const zh = {\n  app: {\n    name: \"力扣加加\",\n    preview: \"预览\",\n    copyMdOrigin: \"点击复制 MarkDown 原文\",\n    fullScreen: \"全屏模式(退出请按 ESC)\",\n    toUse: \"去使用\",\n    custom: \"自定义\",\n    presets: \"预设\",\n    setLang: \"设置语言\",\n    changeLang: \"English\",\n    copy: \"复制\",\n    save: \"保存\",\n    yes: \"是\",\n    no: \"否\",\n    delete: \"删除\",\n    delTitle: \"确认要删除么？\",\n    deleteSuccess: \"删除成功~\",\n    saveSuccess: \"保存成功~\",\n    copySuccess: \"复制成功~\",\n    article: \"文章\",\n    recommendedQuestions: \"推荐题目：\",\n    goForDictation: \"去默写\",\n    contribution: \"纠错 or 贡献其他语言\",\n    back: \"返回主页\",\n    viewSolution: \"查看本题题解\",\n    viewInHandpickCollection: \"该题已被收录到精选合集《{slotText}》点击查看\",\n    notCollected: \"本题暂未被力扣加加收录，点击查看所有已收录题目~\",\n    allCollected: \"所有已收录的题目\",\n    writingExplanation: \"正在撰写题解...\",\n    goToTheWebsiteToUse: \"去网站使用\",\n    checkTips:\n      \"一般只要你开启了自动更新，那么当插件更新之后chrome会在五个小时以内自动更新。如果你想第一时间更新，或者您禁用了自动更新，都可以在这里检测最新版。\",\n    checkBtn: \"检测更新\",\n    selfIntroduction:\n      \"作者是一个 Github 54K star 的前端架构师，leetcode 刷题插件leetcode-cheatsheet作者，掌握各种算法套路，写了十几万字的算法刷题套路电子书，公众号回复【电子书】获取。\",\n    allSolutions: {\n      columns: {\n        title: \"题目\",\n        tag: \"标签\",\n      },\n    },\n    initializeContentScriptFailed: \"初始化 chrome 插件 content script 失败\",\n    run: \"运行\",\n    submit: \"提交\",\n    wirteSolution: \"写题解\",\n    visualizationDebug: \"可视化调试\",\n    linkedListCommnet:\n      \"如果你在调试链表题目，手动生成链表很麻烦，想快速生成链表可以注释如下方法，并使用如下方法，输入一个数组，返回一个链表\",\n    visualDebugComment:\n      \"替换下方的 xxx 为主函数名， yyy 为测试用例参数开启调试\",\n    visualDebugSupport: \"当前仅支持\",\n    getProblemError: \"获取题目描述失败，请先切换到题目描述标签页\",\n    savingProblem: \"正在存储题目信息，请稍后~\",\n    githubAPIError:\n      \"使用 Github API 失败，已为您切换为普通模式，普通模式仅可自动带入题目名称，题目地址以及题解语言。\",\n    notYet: \"暂无\",\n  },\n  problem: {\n    3: \"3. 无重复字符的最长子串\",\n    10: \"10. 正则表达式匹配\",\n    34: \"34. 在排序数组中查找元素的第一个和最后一个位置\",\n    39: \"39. 组合总和\",\n    40: \"40. 组合总和 II\",\n    44: \"44. 通配符匹配\",\n    46: \"46. 全排列\",\n    47: \"47. 全排列 II\",\n    52: \"52. N 皇后 II\",\n    62: \"62. 不同路径\",\n    63: \"63. 不同路径 II\",\n    64: \"64. 最小路径和\",\n    69: \"69. x 的平方根\",\n    70: \"70. 爬楼梯\",\n    72: \"72. 编辑距离\",\n    76: \"76. 最小覆盖子串\",\n    78: \"78. 子集\",\n    90: \"90. 子集 II\",\n    113: \"113. 路径总和 II\",\n    116: \"116. 填充每个节点的下一个右侧节点指针\",\n    131: \"131. 分割回文串\",\n    140: \"140. 单词拆分 II\",\n    148: \"148. 排序链表\",\n    174: \"174. 地下城游戏\",\n    198: \"198. 打家劫舍\",\n    208: \"208. 实现 Trie (前缀树)\",\n    209: \"209. 长度最小的子数组\",\n    211: \"211. 添加与搜索单词 - 数据结构设计\",\n    212: \"212. 单词搜索 II\",\n    233: \"233. 数字 1 的个数\",\n    278: \"278. 第一个错误的版本\",\n    \"278_desc\":\n      \"最左最右思路一样，大家练习两道，实际情况根据题意使用不同的二分即可。\",\n    292: \"292. Nim 游戏\",\n    303: \"303. 区域和检索 - 数组不可变（使用一维前缀和会更简单）\",\n    307: \"307. 区域和检索 - 数组可修改\",\n    3187: \"3187. 数组中的峰值\",\n    327: \"327. 区间和的个数\",\n    322: \"322. 零钱兑换\",\n    337: \"337. 打家劫舍 III\",\n    357: \"357. 计算各个位数不同的数字个数\",\n    399: \"399. 除法求值\",\n    416: \"416. 分割等和子集\",\n    438: \"438. 找到字符串中所有字母异位词\",\n    464: \"464. 我能赢吗\",\n    472: \"472. 连接词\",\n    493: \"493. 翻转对\",\n    513: \"513. 找树左下角的值\",\n    518: \"518. 零钱兑换 II\",\n    528: \"528. 按权重随机选择\",\n    540: \"540. 有序数组中的单一元素\",\n    547: \"547. 朋友圈\",\n    576: \"576. 出界的路径数(只能选两个方向变成了只能选四个方向而已)\",\n    648: \"648. 单词替换\",\n    662: \"662. 二叉树最大宽度\",\n    698: \"698. 划分为 k 个相等的子集\",\n    721: \"721. 账户合并\",\n    743: \"743. 网络延迟时间\",\n    778: \"778. 水位上升的泳池中游泳\",\n    \"778_desc\":\n      \"DFS + 二分，类似的题目有很多，比如第 1439 题。这种题套路都很像，难度其实也不算大。\",\n    808: \"808. 分汤\",\n    816: \"816. 模糊坐标\",\n    820: \"820. 单词的压缩编码\",\n    837: \"837. 新21点\",\n    863: \"863. 二叉树中所有距离为 K 的结点\",\n    877: \"877. 石子游戏\",\n    902: \"902. 最大为 N 的数字组合\",\n    904: \"904. 水果成篮\",\n    912: \"912. 排序数组\",\n    930: \"930. 和相同的二元子数组\",\n    935: \"935. 骑士拨号器(只能选两个方向变成了只能选八个方向而已)\",\n    990: \"990. 等式方程的可满足性\",\n    992: \"992. K 个不同整数的子数组\",\n    1004: \"1004. 最大连续 1 的个数 III\",\n    1015: \"1015. 可被 K 整除的最小整数\",\n    1032: \"1032. 字符流\",\n    1046: \"1046. 最后一块石头的重量(这道题需要用大顶堆，不过都差不多)\",\n    1202: \"1202. 交换字符串中的元素\",\n    1109: \"1109. 航班预订统计\",\n    1140: \"1140. 石子游戏 II\",\n    1234: \"1234. 替换子串得到平衡字符串\",\n    1248: \"1248. 统计「优美子数组」\",\n    1255: \"1255. 得分最高的单词集合\",\n    1314: \"1314. 矩阵区域和\",\n    1406: \"1406. 石子游戏 III\",\n    1462: \"1462. 课程表 IV\",\n    1480: \"1480. 一维数组的动态和\",\n    1510: \"1510. 石子游戏 IV\",\n    1563: \"1563. 石子游戏 V\",\n    1584: \"1584. 连接所有点的最小费用\",\n    1649: \"1649. 通过指令创建有序数组\",\n    1681: \"1681. 最小不兼容性\",\n    1686: \"1686. 石子游戏 VI\",\n    \"1686_desc\": \"除了这个，其他《石子游戏》思路基本都一样\",\n    1690: \"1690. 石子游戏 VII\",\n    1886: \"1886. 判断矩阵经轮转后是否一致\",\n    2536: \"2536. 子矩阵元素加 1\",\n    2569: \"2569. 更新数组后处理求和查询\",\n    2736: \"2736. 最大和查询\",\n    2867: \"2867. 统计树中的合法路径数目\",\n\n    // https://binarysearch.com/problems\n    minimumLightRadius: \"最小光照半径\",\n    minimumLightRadius_desc: \"经典能力检测二分，力扣也有一道类似题\",\n    kthPairDistance: \"第 K 小的距离对\",\n    kthPairDistance_desc:\n      \"典型的计数二分，本质上也是能力检测，只不过题量大，单独拆出来。\",\n    increasingDigits: \"递增的数位\",\n    palindromicInsertions: \"回文插入\",\n    palindromicInsertions_desc:\n      \"区间 dp 需要从序列两头同时进行，而不是从序列的某一端到另一端\",\n\n    // 剑指 Offer 系列\n    JZ51: \"剑指 Offer 51. 数组中的逆序对\",\n\n    // 面试题系列\n    interview17_13: \"面试题 17.13. 恢复空格\",\n    interview17_13__desc:\n      \"细节怎么练？+1？ -1? 怎么初始化？大家可以通过这道题学习一下~\",\n\n    longestIncreasingSubsequence: \"最长上升子序列系列\",\n    longestIncreasingSubsequence_desc: \"系列经典题目，值得一做\",\n    littleRabbitsChessboard: \"小兔的棋盘\",\n    shopeesOffice: \"Shopee 的办公室\",\n  },\n  codeTemplate: {\n    name: \"代码模板\",\n    perSum: {\n      title: \"前缀和\",\n      tips: \"建议先学会之后再用模板。 如果你还不会的话，可以看看这篇\",\n      item1: \"一维前缀和\",\n      item2: \"二维前缀和\",\n      item3: \"一维差分数组\",\n      item4: \"二维差分数组\",\n    },\n    graph: {\n      title: \"图\",\n      item1: \"dijkstra(单源贪心最短路径)\",\n      item1_desc1: \"比如一个图是这样的：\",\n      item1_desc2: \"我们使用邻接矩阵来构造：\",\n      item2: \"floyd_warshall(多源动态规划最短路径)\",\n      item3: \"Bellman–Ford（单源动态规划最短路径）\",\n      item4: \"Kruskal（又称加边法，是一种最小生成树算法）\",\n      item5: \"Prim（又称加点法，是一种最小生成树算法）\",\n      item6: \"Kahn（基于BFS的拓扑排序）\",\n    },\n    binarySearch: {\n      title: \"二分法\",\n      item1: \"查找一个数\",\n      item2: \"寻找最左边的满足条件的值\",\n      item3: \"寻找最右边的满足条件的值\",\n      item4: \"寻找最左插入位置\",\n      item5: \"寻找最右插入位置\",\n    },\n    BFS: {\n      item1: \"带层信息\",\n      item2: \"不带层信息\",\n    },\n\n    heap: {\n      title: \"堆\",\n      item1: \"小顶堆\",\n      item2: \"对顶堆\",\n    },\n\n    slidingWindow: {\n      title: \"滑动窗口\",\n      item1: \"固定窗口（伪代码）\",\n      item1_text:`\n      初始化前后指针 = 0\n      初始化 ans\n\n      for 前指针 in 可迭代集合\n          更新窗口内信息（前指针进窗口，后指针出窗口）\n          后指针移动\n      更新答案\n      返回 ans\n          `,\n      item2: \"可变窗口（伪代码）\",\n      item2_text:`\n      初始化慢指针 = 0\n      初始化 ans\n\n      for 快指针 in 可迭代集合\n          更新窗口内信息\n          while 窗口内不符合题意\n              扩展或者收缩窗口\n              慢指针移动\n          更新答案\n      返回 ans\n          `,\n    },\n\n    backtrack: {\n      title: \"回溯\",\n      item1: \"标准回溯（伪代码）\",\n      item2: \"笛卡尔积优化\",\n    },\n\n    trie: {\n      title: \"前缀树\",\n      item1: \"标准前缀树\",\n    },\n\n    uf: {\n      title: \"并查集\",\n      item1: \"不带权并查集\",\n      item2: \"带权并查集\",\n    },\n\n    segmentTree: {\n      title: \"线段树和树状数组\",\n      item1: \"区间和线段树\",\n      item2: \"区间和懒更新（区间更新）线段树\",\n      item3: \"计数线段树\",\n      item4: \"动态开点\",\n      item5: \"树状数组\",\n    },\n\n    handWriting: {\n      title: \"手撕算法\",\n      item1: \"数组排序\",\n      item2: \"链表排序\",\n    },\n\n    rotate: {\n      title: \"矩阵旋转\",\n      item1: \"顺时针 90° 旋转二维矩阵\",\n    },\n\n    prime: {\n      title: \"求质数\",\n      item1: \"质数筛选法\",\n    },\n\n    suffixArray: {\n      title: \"后缀数组\",\n      item1: \"标准版\",\n    },\n\n    moreTemplate: \"更多模板后续陆续更新~\",\n  },\n  dataStructureVisualization: {\n    name: \"数据结构可视化\",\n    incrementalUsage: \"增量使用\",\n    explain1:\n      \"暂不支持编辑功能。如果需要编辑，可通过先“使用”再“保存”，最后“删除”原有的数据，从而间接实现。\",\n    explain2: \"模板可以增量使用。点击”去使用“的下拉三角，并选择增量使用即可。\",\n    explain3:\n      \"使用的模板会根据你鼠标的位置生成。比如你的鼠标在点(100, 100)，那么模板会整体偏移 (100, 100)个单位。如果此时模板并不是正好以(100, 100)为左上顶点，说明模板本身制作的时候就不是以(0,0)为左上顶点制作的。大家制作自定义模板的话需要注意这一点。\",\n    explain4: \"你也可以选择直接使用原生 excalidraw \",\n  },\n\n  explanationTemplate: {\n    name: \"题解模板\",\n    code: \"代码\",\n    goToTheWebsiteToUse: \"去网站使用\",\n    problemAddress: \"题目地址\",\n    problemDesc: \"题目描述\",\n    preKnowledge: \"前置知识\",\n    company: \"公司\",\n    thinking: \"思路\",\n    keyPoints: \"关键点\",\n    languageSupport: \"语言支持\",\n    complexityAnalysis: \"复杂度分析\",\n    complexityDeclare: \"令 n 为数组长度。\",\n    timeComplexity: \"时间复杂度\",\n    spaceComplexity: \"空间复杂度\",\n    howToUse: \"如何使用？\",\n    programmingLanguage: \"编程语言:1\",\n    commonFormulas: \"常用公式（点击可复制）：\",\n    noBackup: \"没有找到任何备份文件\",\n    restore: \"恢复上次编辑内容\",\n    backupTips:\n      \"题解每五秒备份一次，如果你不小心刷新了浏览器可以点击下方的恢复按钮还原。由于是覆盖式备份，因此仅会保存最后一次编辑的内容。\",\n    afterUpdateTemplateTips: \"后续考虑提供更多题解模板。\",\n    afterUpdateThemeTips: \"后续考虑支持更多主题，以及用户自定义主题。\",\n  },\n  complexityQuickCheck: {\n    name: \"复杂度速查\",\n    tips: \"不懂为什么？点这里\",\n    dataScale: \"数据规模\",\n    timeComplexity: \"算法可接受时间复杂度\",\n  },\n  learningRoute: {\n    name: \"学习路线\",\n    binarySearch: \"二分查找\",\n    binarySearchDesc: `\n    如果让我用一句话总结二分法，我会说**二分法是一种让未知世界无机可乘的算法**。即二分法无论如何我们都可以舍弃一半解，也就是无论如何都可以将解空间砍半。\n    难点就是两点：**什么条件** 和 **舍弃哪部分**。这是二分法核心要解决的问题。\n    \n    从战术上有两种基本类型，分别是最左插入二分和最右插入二分。\n    \n    从战略上有四种基本类型，能力检测二分，前缀和二分，插入排序二分和计数二分。\n    \n    两种类型（最左和最右插入）主要解决的的是：**解空间已经明确出来了，如何用代码找出具体的解**。而四大应用主要解决的是：**如何构造解空间**。更多的情况则是如何构建有序序列。\n\n    这两部分都是实操性很强的内容，在理解这两部分内容的同时，请大家务必牢记一个中心**折半**。\n    \n    更多内容请访问：https://lucifer.ren/blog/2021/03/08/binary-search-1`,\n    binarySearch_item1: \"最左/最右二分\",\n    binarySearch_item1_text: \"代码参考：代码模板 - 二分法\",\n    binarySearch_item1_keys: `\n    1. 最左二分不断收缩右边界，最终返回左边界\n    2. 最右二分不断收缩左边界，最终返回右边界\n    `,\n    binarySearch_item2: \"能力检测二分\",\n    binarySearch_item2_keys: `定义函数 possible 参数是 mid，返回值是布尔值。外层根据返回值调整\"解空间\"。示例代码是以最左二分为例的。\n    `,\n    binarySearch_item3: \"前缀和二分\",\n    binarySearch_item3_keys: `\n    如果数组是非负的，那么前缀和就是一个单调不递减数组，我们有时候可以基于它来做二分。\n    `,\n    binarySearch_item4: \"插入排序二分\",\n    binarySearch_item4_keys: `\n    不断插入并维护序列有序，进而利用有序做一些事情。\n    `,\n    binarySearch_item5: \"计数二分\",\n    binarySearch_item5_keys: `本质也是能力检测，因此和能力检测框架基本一致，大家对比理解一下。\n    `,\n\n    dp: \"动态规划\",\n    dp_desc: `\n    同一类型的不同题目框架基本一致，但细节略有不同，模板代码仅以某一种为例进行讲述，大家根据实际情况微调。\n    \n    动态规划三把斧：状态，枚举，转移方程（选择）。对于每一种题目，我都尽量按照这三点给大家提示。\n    \n    当然这个学习路线是给有一些基础的人看的，如果你还没有基础，可以看下相关文章，之后我也会写一篇硬核套路文。\n    `,\n    dp_item1: \"单字符串型\",\n    dp_item1_keys1: `状态：\n    1. dp[i] 表示以 s[i] 结尾的 xxxx\n    2. dp[i] 表示到 s[i] 为止的 xxxx\n    `,\n\n    dp_item1_keys2:\n      \"枚举：通常都是两层循环，一层循环固定左端点，另一层循环固定右端点进行枚举\",\n    dp_item1_keys3:\n      \"转移方程：根据题目选择是否和 s[j] 结合，取最大，最小或计数即可\",\n\n    dp_item2: \"双字符串型\",\n    dp_item2_keys1: `状态：\n    1. dp[i][j] 表示以 s1[i],s2[j] 结尾的 xxxx\n    2. dp[i][j] 表示到 s1[i],s2[j] 为止的 xxxx\n    `,\n    dp_item2_keys2:\n      \"枚举：通常都是两层循环，一层循环固定 s1 的右端点，另一层循环固定 s2 的右端点进行枚举\",\n    dp_item2_keys3:\n      \"状态转移：根据题目以及 s[i]， s[j] 的关系，取最大，最小或计数即可\",\n\n    dp_item3: \"爬楼梯型\",\n    dp_item3_keys1: `状态：\n    1. 一维通常是 dp[i] 表示以 nums[i] 结尾的 xxxx\n    2. 二维通常是 dp[i][j] 表示以 grid[i][j] 结尾的 xxxx\n    `,\n    dp_item3_keys2:\n      \"枚举：一维就是一层循环枚举所有的 nums，二维就是两层循环枚举所有的 grid\",\n    dp_item3_keys3: `状态转移：\n    1. 一维通常是当前格子和前面的两个格子的关系，可能是最大最小或计数。 \n      dp[i] = dp[i - 1] + dp[i - 2]，这也叫递推式，因为不涉及决策。\n    2. 二维通常是当前格子和上方以及左方的两个格子的关系，可能是最大最小或计数。\n      dp[i][j] = dp[i - 1][j] + dp[i][j-1]，这也叫递推式，因为不涉及决策。\n    3. 根转移方程不难看出， 这种题目通常都可以滚动数组优化\n            `,\n\n    dp_item4: \"背包型（仅列举题目）\",\n    dp_item5: \"数位型（仅列举题目）\",\n    dp_item5_keys1:\n      \"常见的 dp 定义为 dp[i][j] 其中 i 为数字的长度， j 为最后一位的数。比如 dp[3][2] 表示这个数一共三位，最后一位是 2 的情况\",\n\n    dp_item6: \"概率型（仅列举题目）\",\n    dp_item7: \"博弈型（仅列举题目）\",\n\n    dp_item8: \"区间 DP\",\n    dp_item8_keys1: `\n    右边界倒序遍历，左边界正序遍历\n    `,\n    dp_item8_keys2: \"通常都是返回 dp[0][n]，而不是其他常见的 dp[-1][-1]\",\n    dp_item9: \"状态压缩型（仅列举题目）\",\n\n    tree: \"树\",\n    linkedList: \"链表\",\n    clickToEnlarge: \"单击可放大\",\n    recommendedProblems: \"推荐题目\",\n  },\n  checkForUpdates: {\n    name: \"检查更新\",\n  },\n  aboutMe: {\n    name: \"关于我\",\n  },\n};\n// export default zh;\nmodule.exports = zh;\n","const en = {\n  app: {\n    name: \"LeetCode Cheatsheet\",\n    preview: \"Preview\",\n    copyMdOrigin: \"Click to copy MarkDown origin\",\n    fullScreen: \"Full Screen (Press ESC to exit)\",\n    toUse: \"To Use\",\n    custom: \"Custom\",\n    presets: \"Presets\",\n    setLang: \"Set Language\",\n    changeLang: \"中文\",\n    copy: \"copy\",\n    save: \"save\",\n    yes: \"yes\",\n    no: \"no\",\n    delete: \"delete\",\n    delTitle: \"Are you sure you want to delete it?\",\n    deleteSuccess: \"Delete successfully~\",\n    saveSuccess: \"Save successfully~\",\n    copySuccess: \"Copy successfully~\",\n    article: \"article\",\n    recommendedQuestions: \"Recommended Questions:\",\n    goForDictation: \"go for dictation\",\n    contribution: \"Correction or contribution to other languages\",\n    back: \"Back to Home page\",\n    viewSolution: \"View solution\",\n    viewInHandpickCollection:\n      \"This question has been collected in the handpick collection《{slotText}》Click to view\",\n    notCollected:\n      \"This question has not been collected by LeetCode Plus, click to view all collected questions\",\n    allCollected: \"All collected questions\",\n    writingExplanation: \"Writing explanation\",\n    goToTheWebsiteToUse: \"Go to the website to use\",\n    checkTips:\n      \"Generally, as long as you turn on automatic updates, chrome will automatically update within five hours after the plug-in is updated. If you want to update as soon as possible, or if you disable automatic updates, you can check the latest version here.\",\n    checkBtn: \"Check for updates\",\n    selfIntroduction:\n      \"The author is a front-end architect with 54K stars on Github, the author of the leetcode-cheatsheet leetcode plugin, master all kinds of algorithm routines, and wrote hundreds of thousands of words of algorithm brushing e-books. Reply to the public account [电子书] to get.\",\n    allSolutions: {\n      columns: {\n        title: \"Title\",\n        tag: \"Tag\",\n      },\n    },\n    initializeContentScriptFailed:\n      \"Failed to initialize the chrome plugin content script\",\n    run: \"Run\",\n    submit: \"Submit\",\n    wirteSolution: \"Write Solution\",\n    visualizationDebug: \"Visualization Debug\",\n    linkedListCommnet:\n      \"If you are debugging linked list questions, it is very troublesome to generate linked lists manually. If you want to quickly generate linked lists, you can comment out the following method and use the following method to enter an array and return a linked list.\",\n    visualDebugComment:\n      \"Replace xxx below with the main function name, yyy with the test case parameter, and turn on debugging\",\n    getProblemError:\n      \"Failed to get the problem description, please switch to the problem description tab first\",\n    savingProblem: \"Saving problem information, please wait~\",\n    githubAPIError:\n      \"Failed to use Github API, has been switched to normal mode, normal mode can only automatically bring in the problem name, problem address and solution language.\",\n    notYet: \"Not yet\",\n  },\n  problem: {\n    3: \"3. Longest Substring Without Repeating Characters\",\n    10: \"10. Regular Expression Matching\",\n    34: \"34. Find First and Last Position of Element in Sorted Array\",\n    39: \"39. Combination Sum\",\n    40: \"40. Combination Sum II\",\n    44: \"44. Wildcard Matching\",\n    46: \"46. Permutations\",\n    47: \"47. Permutations II\",\n    52: \"52. N-Queens II\",\n    62: \"62. Unique Paths\",\n    63: \"63. Unique Paths II\",\n    64: \"64. Minimum Path Sum\",\n    69: \"69. Sqrt(x)\",\n    70: \"70. Climbing Stairs\",\n    72: \"72. Edit Distance\",\n    76: \"76. Minimum Window Substring\",\n    78: \"78. Subsets\",\n    90: \"90. Subsets II\",\n    113: \"113. Path Sum II\",\n    116: \"116. Populating Next Right Pointers in Each Node\",\n    131: \"131. Palindrome Partitioning\",\n    140: \"140. Word Break II\",\n    148: \"148. Sort List\",\n    174: \"174. Dungeon Game\",\n    198: \"198. House Robber\",\n    208: \"208. Implement Trie (Prefix Tree)\",\n    209: \"209. Minimum Size Subarray Sum\",\n    211: \"211. Design Add and Search Words Data Structure\",\n    212: \"212. Word Search II\",\n    233: \"233. Number of Digit One\",\n    278: \"278. First Bad Version\",\n    \"278_desc\":\n      \"The idea of the leftmost and rightmost is the same. Everyone can practice two questions. The actual situation can use different binary search according to the meaning of the question.\",\n    292: \"292. Nim Game\",\n    303: \"303. Range Sum Query - Immutable(It is simpler to use one-dimensional prefix sums)\",\n    307: \"307. Range Sum Query - Mutable\",\n    3187: \"3187. Peaks in Array\",\n    327: \"327. Count of Range Sum\",\n    322: \"322. Coin Change\",\n    337: \"337. House Robber III\",\n    357: \"357. Count Numbers with Unique Digits\",\n    399: \"399. Evaluate Division\",\n    416: \"416. Partition Equal Subset Sum\",\n    438: \"438. Find All Anagrams in a String\",\n    464: \"464. Can I Win\",\n    472: \"472. Concatenated Words\",\n    493: \"493. Reverse Pairs\",\n    513: \"513. Find Bottom Left Tree Value\",\n    518: \"518. Coin Change 2\",\n    528: \"528. Random Pick with Weight\",\n    540: \"540. Single Element in a Sorted Array\",\n    547: \"547. Number of Provinces\",\n    576: \"576. Out of Boundary Paths(changed from selecting two directions to selecting four directions)\",\n    648: \"648. Replace Words\",\n    662: \"662. Maximum Width of Binary Tree\",\n    698: \"698. Partition to K Equal Sum Subsets\",\n    721: \"721. Accounts Merge\",\n    743: \"743. Network Delay Time\",\n    778: \"778. Swim in Rising Water\",\n    \"778_desc\":\n      \"DFS + binary search, there are many similar questions, such as the 1439th question. This kind of question routine is very similar, and the difficulty is not big.\",\n    808: \"808. Soup Servings\",\n    816: \"816. Ambiguous Coordinates\",\n    820: \"820. Short Encoding of Words\",\n    837: \"837. New 21 Game\",\n    863: \"863. All Nodes Distance K in Binary Tree\",\n    877: \"877. Stone Game\",\n    902: \"902. Numbers At Most N Given Digit Set\",\n    904: \"904. Fruit Into Baskets\",\n    912: \"912. Sort an Array\",\n    930: \"930. Binary Subarrays With Sum\",\n    935: \"935. Knight Dialer(Changed from selecting two directions to selecting eight directions)\",\n    990: \"990. Satisfiability of Equality Equations\",\n    992: \"992. Subarrays with K Different Integers\",\n    1004: \"1004. Max Consecutive Ones III\",\n    1015: \"1015. Smallest Integer Divisible by K\",\n    1032: \"1032. Stream of Characters\",\n    1046: \"1046. Last Stone Weight(This question needs to use a large top heap, but they are almost the same)\",\n    1140: \"1140. Stone Game II\",\n    1109: \"1109. Corporate Flight Bookings\",\n    1202: \"1202. Smallest String With Swaps\",\n    1234: \"1234. Replace the Substring for Balanced String\",\n    1248: \"1248. Count Number of Nice Subarrays\",\n    1255: \"1255. Maximum Score Words Formed by Letters\",\n    1314: \"1314. Matrix Block Sum\",\n    1406: \"1406. Stone Game III\",\n    1462: \"1462. Course Schedule IV\",\n    1480: \"1480. Running Sum of 1d Array\",\n    1510: \"1510. Stone Game IV\",\n    1563: \"1563. Stone Game V\",\n    1584: \"1584. Min Cost to Connect All Points\",\n    1649: \"1649. Create Sorted Array through Instructions\",\n    1681: \"1681. Minimum Incompatibility\",\n    1686: \"1686. Stone Game VI\",\n    \"1686_desc\":\n      \"Except for this one, the other \\\"Stone Game\\\" ideas are basically the same\",\n    1690: \"1690. Stone Game VII\",\n    1886: \"1886. Determine Whether Matrix Can Be Obtained By Rotation\",\n    2536: \"2536. Increment Submatrices by One\",\n    2569: \"2569. Handling Sum Queries After Update\",\n    2736: \"2736. Maximum Sum Queries\",\n    2867: \"2867. Number of Valid Paths in a Tree\",\n\n    // https://binarysearch.com/problems\n    minimumLightRadius: \"Minimum Light Radius\",\n    minimumLightRadius_desc:\n      \"Classic ability detection binary search, leetcode also has a similar topic\",\n    kthPairDistance: \"Kth Smallest Distance Pair\",\n    kthPairDistance_desc:\n      \"Typical counting binary search, which is essentially an ability test, but the number of questions is large, so it is separated.\",\n    increasingDigits: \"Increasing Digits\",\n    palindromicInsertions: \"Palindromic Insertions\",\n    palindromicInsertions_desc:\n      \"For interval dynamic programming, it is necessary to proceed simultaneously from both ends of the sequence, rather than from one end of the sequence to the other.\",\n\n    // 剑指 Offer 系列\n    JZ51: \"Sword Offer 51. Reverse pairs in an array\",\n\n    // 面试题系列\n    interview17_13: \"Interview 17.13. Re-Space LCCI\",\n    interview17_13__desc:\n      \"CHow to practice the details? 1? - 1? How to initialize? You can learn through this question ~\",\n\n    longestIncreasingSubsequence: \"Longest Increasing Subsequence Series\",\n    longestIncreasingSubsequence_desc: \"Series classic topic, worth doing\",\n    littleRabbitsChessboard: \"Little Rabbit's Chessboard\",\n    shopeesOffice: \"Shopee's Office\",\n  },\n  codeTemplate: {\n    name: \"Code Template\",\n    perSum: {\n      title: \"Prefix Sum\",\n      tips: \"It is recommended to learn it first and then use the template. If you don't know it yet, you can take a look at this article\",\n      item1: \"One-dimensional prefix sum\",\n      item2: \"Two-dimensional prefix sum\",\n      item3: \"One-dimensional difference array\",\n      item4: \"Two-dimensional difference array\",\n    },\n    graph: {\n      title: \"Graph\",\n      item1: \"dijkstra(single-source greedy shortest path)\",\n      item1_desc1: \"For example, consider a graph like this:\",\n      item1_desc2: \"We construct it using an adjacency matrix:\",\n      item2: \"floyd_warshall(multi-source dynamic programming shortest path)\",\n      item3: \"Bellman–Ford(single-source dynamic programming shortest path)\",\n      item4:\n        \"Kruskal(also known as adding edge method, is a minimum spanning tree algorithm)\",\n      item5:\n        \"Prim(also known as adding point method, is a minimum spanning tree algorithm)\",\n      item6: \"Kahn(topological sorting based on BFS)\",\n    },\n    binarySearch: {\n      title: \"Binary Search\",\n      item1: \"Find a number\",\n      item2: \"Find the leftmost value that satisfies the condition\",\n      item3: \"Find the rightmost value that satisfies the condition\",\n      item4: \"Find the leftmost insertion position\",\n      item5: \"Find the rightmost insertion position\",\n    },\n    BFS: {\n      item1: \"With layer information\",\n      item2: \"Without layer information\",\n    },\n\n    heap: {\n      title: \"Heap\",\n      item1: \"Min Heap\",\n      item2: \"Two Heaps\",\n    },\n\n    slidingWindow: {\n      title: \"Sliding Window\",\n      item1: \"Fixed length sliding window\",\n      item1_text:`\n      Initialize front and back pointers to 0.\n      Initialize ans.\n\n      for front in iterable\n          update window info (front in, back out)\n          move back pointer\n      update ans\n      return ans\n          `,\n      item2: \"Variable length sliding window\",\n      item2_text:`\n      Initialize the slow pointer to 0.\n      Initialize ans.\n\n      for fast pointer in iterable collection\n          update information in the window\n          while the window does not satisfy the question\n              expand or shrink the window\n              move the slow pointer\n          update the answer\n      return ans\n          `\n    },\n\n    backtrack: {\n      title: \"Backtrack\",\n      item1: \"Standard backtrack\",\n      item2: \"Cartesian product optimization\",\n    },\n\n    trie: {\n      title: \"Trie\",\n      item1: \"Standard Trie\",\n    },\n\n    uf: {\n      title: \"Union Find\",\n      item1: \"Union Find without weight\",\n      item2: \"Union Find with weight\",\n    },\n\n    segmentTree: {\n      title: \"Segment Tree and Binary Indexed Tree\",\n      item1: \"Interval and segment tree\",\n      item2:\n        \"Interval sum with lazy propagation (interval update) segment tree\",\n      item3: \"Counting segment tree\",\n      item4: \"Dynamic allocation of nodes\",\n      item5: \"Binary Indexed Tree\",\n    },\n\n    handWriting: {\n      title: \"Hand Writing\",\n      item1: \"Sort an array\",\n      item2: \"Sort a linked list\",\n    },\n\n    rotate: {\n      title: \"Rotate\",\n      item1: \"Rotate the 2D matrix 90 degrees clockwise.\",\n    },\n\n    prime: {\n      title: \"Prime\",\n      item1: \"Prime screening method\",\n    },\n\n    suffixArray: {\n      title: \"Suffix Array\",\n      item1: \"Standard version\",\n    },\n\n    moreTemplate: \"More templates will be updated one after another~\",\n  },\n  dataStructureVisualization: {\n    name: \"Data Structure Visualization\",\n    incrementalUsage: \"Incremental Usage\",\n    explain1:\n      \"The editing function is not supported. If you need to edit, you can do so indirectly by first \\\"use\\\", then \\\"save\\\", and finally \\\"delete\\\" the original data.\",\n    explain2:\n      \"Templates can be used incrementally. Click the drop-down triangle of 'to use' and select Incremental Usage.\",\n    explain3:\n      \"The template will be generated according to the position of your mouse. For example, if your mouse is at point (100, 100), the template will be offset by (100, 100) units as a whole. If the template is not exactly at (100, 100), it means that the template itself was not created with (0, 0) as the top-left corner. When creating custom templates, it's important to keep this in mind.\",\n    explain4: \"You can also choose to use the native excalidraw directly \",\n  },\n\n  explanationTemplate: {\n    name: \"Explanation Template\",\n    code: \"Code\",\n    goToTheWebsiteToUse: \"Go to the website to use\",\n    problemAddress: \"Problem Address\",\n    problemDesc: \"Problem Description\",\n    preKnowledge: \"Pre Knowledge\",\n    company: \"Company\",\n    thinking: \"Thinking\",\n    keyPoints: \"Key Points\",\n    languageSupport: \"Language Support\",\n    complexityAnalysis: \"Complexity Analysis\",\n    complexityDeclare: \"Let n be the length of the array.\",\n    timeComplexity: \"Time Complexity\",\n    spaceComplexity: \"Space Complexity\",\n    howToUse: \"How to use it?\",\n    programmingLanguage: \"Programming Language:\",\n    commonFormulas: \"Common formulas (click to copy):\",\n    noBackup: \"No backup file found\",\n    restore: \"Restore last edit content\",\n    backupTips:\n      \"The explanation is backed up every five seconds. If you accidentally refresh the browser, you can click the restore button below to restore it. Since it is an overwrite backup, only the last edited content will be saved.\",\n    afterUpdateTemplateTips:\n      \"More explanation templates will be provided later.\",\n    afterUpdateThemeTips:\n      \"More themes and user-defined themes will be supported later.\",\n  },\n  complexityQuickCheck: {\n    name: \"Complexity Quick Check\",\n    tips: \"Don't understand why? Click here\",\n    dataScale: \"Data Scale\",\n    timeComplexity: \"Algorithm acceptable time complexity\",\n  },\n  learningRoute: {\n    name: \"Learning Route\",\n    binarySearch: \"Binary Search\",\n    binarySearchDesc: `\n    If you ask me to summarize binary search in one sentence, I would say that binary search is an algorithm that makes the unknown world inorganic. That is, no matter what, we can discard half of the solutions, that is, we can cut the solution space in half.\n    The difficulty is two points: **what conditions** and **which part to discard**. This is the core problem that binary search needs to solve.\n\n    There are two basic types of tactics, namely the leftmost insertion binary search and the rightmost insertion binary search.\n\n    There are four basic types of strategies: ability detection binary search, prefix sum binary search, insertion sort binary search, and counting binary search.\n\n    These two parts are very practical. While understanding these two parts, please keep in mind a central point **half**.\n\n    For more information, please visit: https://lucifer.ren/blog/2021/03/08/binary-search-1`,\n    binarySearch_item1: \"Leftmost/Rightmost Binary Search\",\n    binarySearch_item1_text: \"Code reference: Code templates - Binary\",\n    binarySearch_item1_keys: `\n    1. shrink the right boundary continuously and finally return the left boundary\n    2. shrink the left boundary continuously and finally return the right boundary\n    `,\n    binarySearch_item2: \"Ability Detection Binary Search\",\n    binarySearch_item2_keys: `Define the function that the possible argument is mid and the return value is a Boolean value. The outer layer adjusts according to the return value \"; Solution space\" . The sample code is an example of the leftmost binary.\n    `,\n    binarySearch_item3: \"Prefix Sum Binary Search\",\n    binarySearch_item3_keys: `\n    If the array is non-negative, then the prefix sum is a monotone non-decrement array, and we can sometimes make dichotomies based on it.\n    `,\n    binarySearch_item4: \"Insertion Sort Binary Search\",\n    binarySearch_item4_keys: `\n    Continuously insert and maintain the ordered sequence, and then use the ordered sequence to do something.\n    `,\n    binarySearch_item5: \"Counting Binary Search\",\n    binarySearch_item5_keys: `The essence is also ability detection, so it is basically the same as the ability detection framework. Everyone compares and understands.\n    `,\n\n    dp: \"Dynamic Programming\",\n    dp_desc: `\n    The basic framework for different problems of the same type is generally consistent, but with slight variations in details. The template code is explained using a specific type as an example, and individuals should make adjustments based on the actual situation.\n\n    The three key points for dynamic programming are: state, enumeration, and transition equations (choices). For each type of problem, I try to provide hints based on these three points.\n    \n    Of course, this learning path is intended for those with some foundation. If you don't have a foundation yet, you can refer to related articles. I will also write a comprehensive routine article in the future.`,\n    dp_item1: \"Single string type\",\n    dp_item1_keys1: `State:\n    1. dp[i] represents the xxxx ending with s[i]\n    2. dp[i] represents the xxxx up to s[i]`,\n    dp_item1_keys2:\n      \"Enumeration: It usually involves two nested loops, where one loop fixes the left endpoint and the other loop fixes the right endpoint for enumeration.\",\n    dp_item1_keys3:\n      \"Transition equation: Based on the problem, choose whether to combine with s[j], then take the maximum, minimum, or count as required.\",\n\n    dp_item2: \"Double string type\",\n    dp_item2_keys1: `State: \n    1. dp[i][j] represents the xxxx ending with s1[i], s2[j]\n    2. dp[i][j] represents the xxxx up to s1[i], s2[j]`,\n    dp_item2_keys2:\n      \"Enumeration: Typically, it involves two nested loops, where one loop fixes the right endpoint of s1, and the other loop fixes the right endpoint of s2 for enumeration.\",\n    dp_item2_keys3:\n      \"State transition: Based on the problem and the relationship between s[i] and s[j], take the maximum, minimum, or count as required.\",\n\n    dp_item3: \"Sequence type\",\n    dp_item3_keys1: `State: \n    1. In one-dimensional arrays, dp[i] usually represents the xxxx ending with nums[i]\n    2. In two-dimensional arrays, dp[i][j] usually represents the xxxx ending with grid[i][j]`,\n    dp_item3_keys2:\n      \"Enumeration: One-dimensional involves a single loop to enumerate all nums, while two-dimensional involves two loops to enumerate all grid.\",\n    dp_item3_keys3: `State transition:\n    1. In one dimension, it usually involves the relationship between the current cell and the preceding two cells, possibly involving maximum, minimum, or counting.\n      dp[i] = dp[i - 1] + dp[i - 2]\" This is also called a recurrence relation because it does not involve decision-making.\n    2. In two dimensions, it usually involves the relationship between the current cell and its upper and left adjacent cells, possibly involving maximum, minimum, or counting.\n      dp[i][j] = dp[i - 1][j] + dp[i][j-1]\" This is also called a recurrence relation because it does not involve decision-making.\n    3. From the transition equation, it's not difficult to see that this type of problem can usually be optimized using rolling arrays.\n    `,\n\n    dp_item4: \"Backpack type(List only the problems)\",\n    dp_item5: \"Number type(List only the problems)\",\n    dp_item5_keys1:\n      \"The common definition of dynamic programming is represented as dp[i][j], where i stands for the length of the number, and j represents the last digit. For example, dp[3][2] denotes a number with a total of three digits, with 2 as the last digit.\",\n    dp_item6: \"Probability type(List only the problems)\",\n    dp_item7: \"Game type(List only the problems)\",\n\n    dp_item8: \"Interval DP\",\n    dp_item8_keys1: `\n    Traversing in reverse from the right boundary and in forward from the left boundary\n            `,\n    dp_item8_keys2:\n      \"Typically, the return value is dp[0][n], rather than other common dp[-1][-1].\",\n    dp_item9: \"State compression type(List only the problems)\",\n\n    tree: \"Tree\",\n    linkedList: \"Linked List\",\n    clickToEnlarge: \"Click to enlarge\",\n    recommendedProblems: \"Recommended Problems\",\n  },\n  checkForUpdates: {\n    name: \"Check for Updates\",\n  },\n  aboutMe: {\n    name: \"About Me\",\n  },\n};\n// export default en;\nmodule.exports = en;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { ISSUES_URL } from \"./constant/index\";\n\nfunction TreeNode(value) {\n  return {\n    left: null,\n    right: null,\n    value,\n  };\n}\nconst message = {\n  error({ content }) {\n    window.alert(content);\n  },\n};\nconst seen = {};\nexport function getRandomUnique(lower, upper, amount) {\n  console.log(seen);\n  // [10, 20]10\n  const start = getRandom(0, upper - lower - amount);\n  if (`${lower}-${upper}` in seen)\n    return seen[`${lower}-${upper}`].slice(start, start + amount + 1);\n\n  const condidates = Array.from(Array(upper - lower + 1), (_, i) => i + lower);\n\n  const n = condidates.length;\n  for (let i = n - 1; i >= 0; i--) {\n    const temp = condidates[i];\n    const number = (Math.random() * n) >>> 0;\n    condidates[i] = condidates[number];\n    condidates[number] = temp;\n  }\n  seen[`${lower}-${upper}`] = condidates;\n  return condidates.slice(start, start + amount + 1);\n}\n\nexport function getRandom(n, m) {\n  return Math.round(Math.random() * (m - n) + n);\n}\nexport function copyToClipboard(str) {\n  try {\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function serialise_bfs(root) {\n  let ans = \"[\";\n  const q = [root];\n  let cur = null;\n\n  while (q.length > 0) {\n    cur = q.shift();\n    if (cur) {\n      q.push(cur.left);\n      q.push(cur.right);\n      ans += cur.value + \",\";\n    } else {\n      ans += \"null,\";\n    }\n  }\n\n  return ans.slice(0, -1) + \"]\";\n}\nexport function isInExtension() {\n  return process.env.REACT_APP_BUILD_TARGET === \"extension\";\n}\nexport function buildRandomTree({\n  amount = 10,\n  upper = 10,\n  lower = 0,\n  isUnique,\n}) {\n  let remain = amount;\n  let condidates = [];\n  if (isUnique) {\n    condidates = getRandomUnique(lower, upper, amount);\n  }\n\n  function dfs({ upper, lower }) {\n    if (remain <= 0) return null;\n    remain -= 1;\n\n    const root = TreeNode(\n      !isUnique ? getRandom(lower, upper) : condidates[remain]\n    );\n\n    if (Math.random() > 0.5) {\n      root.left = dfs({ upper, lower });\n    }\n    if (Math.random() > 0.5) {\n      root.right = dfs({ upper, lower });\n    }\n    return root;\n  }\n  return dfs({ upper, lower });\n}\n\nexport function bjwd() {\n  return message.error({\n    content: `\n        力扣不讲武德，不按套路出牌。不过没关系啊，你反馈给我，下次一定全部防出去！反馈到这里：${ISSUES_URL}\n      `,\n  });\n}\nexport function getUrlParameter(key) {\n  const searchParams = new URLSearchParams(window.location.search);\n  return searchParams.get(key);\n}\n\nexport function uuidv4() {\n  return \"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function deserialise_bfs(nodes) {\n  if (nodes.length === 0 || nodes[0] === \"null\") return null;\n  const root = TreeNode(nodes[0]);\n  const q = [root];\n  let i = 0;\n\n  while (q.length > 0 && i < nodes.length - 1) {\n    const cur = q.shift();\n\n    const l = TreeNode(nodes[i + 1]);\n    if (l.value !== \"null\") {\n      q.push(l);\n      cur.left = l;\n    }\n\n    if (i < nodes.length - 2) {\n      const r = TreeNode(nodes[i + 2]);\n\n      if (r.value !== \"null\") {\n        q.push(r);\n        cur.right = r;\n      }\n    }\n\n    i += 2;\n  }\n\n  return {\n    root,\n  };\n}\n\nexport function copy(text, cb) {\n  //Create a textbox field where we can insert text to.\n  var copyFrom = document.createElement(\"textarea\");\n\n  //Set the text content to be the text you wished to copy.\n  copyFrom.textContent = text;\n\n  //Append the textbox field into the body as a child.\n  //\"execCommand()\" only works when there exists selected text, and the text is inside\n  //document.body (meaning the text is part of a valid rendered HTML element).\n  document.body.appendChild(copyFrom);\n\n  //Select all the text!\n  copyFrom.select();\n\n  //Execute command\n  document.execCommand(\"copy\");\n\n  //(Optional) De-select the text using blur().\n  copyFrom.blur();\n\n  //Remove the textbox field from the document.body, so no other JavaScript nor\n  //other elements can get access to this.\n  document.body.removeChild(copyFrom);\n\n  if (cb instanceof Function) cb();\n}\n\nexport function getStorage(k) {\n  return new Promise((resolve, reject) => {\n    try {\n      // eslint-disable-next-line\n      if (chrome.storage) {\n        // eslint-disable-next-line\n        chrome.storage.get([k], resolve);\n      } else if (localStorage) {\n        resolve({\n          result: {\n            value: JSON.parse(localStorage.getItem(k)),\n          },\n        });\n      } else {\n        reject(\"未知错误\");\n      }\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function setStorage(k, v) {\n  return new Promise((resolve, reject) => {\n    try {\n      // eslint-disable-next-line\n      if (chrome.storage) {\n        // eslint-disable-next-line\n        chrome.storage.sync.set(\n          {\n            [k]: v,\n          },\n          resolve\n        );\n      } else if (localStorage) {\n        localStorage.setItem(k, JSON.stringify(v));\n        resolve();\n      } else {\n        reject(\"您可能禁用了存储功能~\");\n      }\n    } catch (err) {\n      console.log(err, k, v);\n      reject(\"当前没有存储权限，或者存储已达到上限~\");\n    }\n  });\n}\n\nexport function setCloundStorage(content, { token }) {\n  // return fetch(\"https://api.github.com/repos/azl397985856/stash/issues\", {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     Authorization: `token ${token}`,\n  //   },\n  //   body: JSON.stringify(content),\n  // })\n  //   .then((res) => res.json())\n  //   .then((res) => {\n  //     return {\n  //       ...res,\n  //       id: res.number,\n  //     };\n  //   });\n  return fetch(\"https://my-store2.p.rapidapi.com/order/new\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      \"x-rapidapi-key\": \"8be902d767mshf5d232d6b781084p166217jsn382abe83434f\",\n      \"x-rapidapi-host\": \"my-store2.p.rapidapi.com\",\n    },\n    body: JSON.stringify({\n      customer: JSON.stringify({\n        body: content,\n      }),\n      address: \"\",\n    }),\n  }).then((res) => res.json());\n}\n\nexport function getCloundStorage(id, { token }) {\n  // return fetch(\n  //   `https://api.github.com/repos/azl397985856/stash/issues/${id}`,\n  //   {\n  //     headers: {\n  //       accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: `token ${token}`,\n  //     },\n  //   }\n  // )\n  //   .then((res) => res.json())\n  //   .then((res) => JSON.parse(res.body));\n  return fetch(`https://my-store2.p.rapidapi.com/order/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"x-rapidapi-key\": \"8be902d767mshf5d232d6b781084p166217jsn382abe83434f\",\n      \"x-rapidapi-host\": \"my-store2.p.rapidapi.com\",\n    },\n  })\n    .then((res) => res.json())\n    .then((response) => {\n      return JSON.parse(response.order.customer).body;\n    });\n}\n\nexport function debounceComponent(component, wait) {\n  let timerId = null;\n  return (props) => {\n    clearTimeout(timerId);\n    component(props);\n  };\n}\nexport function debounce(fn, wait) {\n  let callback = fn;\n  let timerId = null;\n\n  function debounced() {\n    // 保存作用域\n    let context = this;\n    // 保存参数，例如 event 对象\n    let args = arguments;\n\n    clearTimeout(timerId);\n    timerId = setTimeout(function () {\n      callback.apply(context, args);\n    }, wait);\n  }\n\n  // 返回一个闭包\n  return debounced;\n}\nconst COLORS = [\n  \"magenta\",\n  \"red\",\n  \"volcano\",\n  \"orange\",\n  \"gold\",\n  \"lime\",\n  \"green\",\n  \"cyan\",\n  \"blue\",\n  \"geekblue\",\n  \"purple\",\n];\n\nexport function getColor(text) {\n  let ans = 0;\n  for (const c of text) ans += c.charCodeAt();\n  return COLORS[ans % COLORS.length];\n}\n\nexport const addStyle = (css) => {\n  const style = document.createElement(\"link\");\n  try {\n    style.innerHTML = css;\n  } catch (e) {\n    console.log(e);\n    style.styleSheet.cssText = css;\n  }\n  const head = document.getElementsByTagName(\"head\")[0];\n  head.appendChild(style);\n};\n\n/**\n * 获取url参数\n * @param {string} url\n * @returns object\n */\nexport const getUrlParams = (url) => {\n  let urlStr = url.split(\"?\")[1];\n  const urlSearchParams = new URLSearchParams(urlStr);\n  const result = Object.fromEntries(urlSearchParams.entries());\n  return result;\n};\n\n\n/**\n * 获取对象指定路径的值\n * @param {object} obj\n * @param {string} path\n * @returns any\n */\nexport const getForPath = (obj, path) => {\n  const pathArr = path.split(\".\");\n  let result = obj;\n  for (const key of pathArr) {\n    result = result[key];\n  }\n  return result;\n};","export const LEETCODE_CN_URL = \"https://leetcode.cn\";\nexport const LEETCODE_URL = \"https://leetcode.com\";\nexport const ISSUES_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues\";\nexport const CONTRIBUTE_COMPANY_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues/1\";\n\nexport const CONTRIBUTE_PROGRAMMING_LANGUAGE_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues/4\";\n","import { getUrlParams, getForPath } from \"../utils\";\nimport { LEETCODE_CN_URL, LEETCODE_URL } from \"../constant\";\nimport zh from \"./zh\";\nimport en from \"./en\";\n\nconst DEV_URL_LANG =\n  process.env.NODE_ENV === \"development\"\n    ? getUrlParams(window.location.href)?.lang\n    : undefined;\n\n// 支持在 url 中传入 lang 参数，否则本地开发刷新页面后会恢复为默认语言\nconst DEFAULT_LANG = DEV_URL_LANG || \"zh\";\n\nlet isInit = false;\n\nexport let lang = DEFAULT_LANG;\n\nconst ALL_LANGS = {\n  zh,\n  en,\n};\n\n// export const ALL_LANG_OPTIONS = {\n//   zh: \"简体中文\",\n//   en: \"English\",\n// };\n\nexport const setLang = (_lang) => {\n  lang = _lang || DEFAULT_LANG;\n};\n\nexport const initLang = async (currentUrl) => {\n  if (isInit) return;\n\n  const isEnHref = currentUrl.includes(LEETCODE_URL);\n  setLang(isEnHref ? \"en\":\"zh\");\n  isInit = true;\n};\n\nexport const getLeetcodeUrlForLang = () => {\n  return lang === \"zh\" ? LEETCODE_CN_URL : LEETCODE_URL;\n};\n\n/**\n * @param {string} keypath\n * @param {string | string[]} slotText\n * @param {string} l lang\n * @returns {string}\n */\nexport const t = (keypath, slotText, l) => {\n  const langData = { Locale: ALL_LANGS[l || lang] };\n  if (!keypath) return \"\";\n  if (!keypath.includes(\"Locale\")) {\n    keypath = \"Locale.\" + keypath;\n  }\n  let content = getForPath(langData, keypath);\n  if (slotText) {\n    if (Array.isArray(slotText)) {\n      slotText.forEach((item, idx) => {\n        content = content.replace(`{${idx}}`, item);\n      });\n    } else {\n      content = content.replace(\"{slotText}\", slotText);\n    }\n  }\n  return content;\n};\n\nexport default ALL_LANGS[lang];\n","\n\nfunction hideFailCases() {\n    const submissionDOM = document.querySelector(\"div[data-key=submissions-content]\")\n    const submmisionTabVisible = submissionDOM?.children.length > 0;\n    if (submmisionTabVisible) {\n        const result = submissionDOM.querySelector(\"div[data-cypress=SubmissionSuccess]\")\n        if (!result) {\n            return false\n        }\n        const hasError = result.getAttribute(\"type\") === \"error\"\n        if (!hasError) return true\n        const input = submissionDOM.children[0].children[0].children[0].children[0].children[2]\n        const output = submissionDOM.children[0].children[0].children[0].children[0].children[3]\n        const expect = submissionDOM.children[0].children[0].children[0].children[0].children[4]\n        input.style.display = \"none\"\n        output.style.display = \"none\"\n        expect.style.display = \"none\"\n\n\n        if (!document.querySelector(\"#leetcode-cheat-show-fail-cases\")) {\n            const showFailCases = document.createElement(\"div\");\n            showFailCases.id = \"leetcode-cheat-show-fail-cases\";\n            const showFailCasesTip = document.createElement(\"span\")\n            showFailCasesTip.innerText = \"请先尝试自己解决，如果实在无法解决再尝试显示失败的测试用例！\";\n            showFailCasesTip.style[\"margin-right\"] = \"20px\";\n            showFailCasesTip.style[\"line-height\"] = \"32px\";\n\n            const showFailCasesButton = document.createElement(\"a\")\n            showFailCasesButton.innerText = \"点击显示失败的测试用例\"\n            showFailCasesButton.style[\"margin-right\"] = \"20px\";\n            showFailCasesButton.style[\"line-height\"] = \"32px\";\n\n            showFailCasesButton.onclick = () => {\n                input.style.display = \"block\"\n                output.style.display = \"block\"\n                expect.style.display = \"block\"\n\n            };\n\n            showFailCases.appendChild(showFailCasesTip);\n            showFailCases.appendChild(showFailCasesButton);\n            submissionDOM.children[0].children[0].children[0].children[0].insertBefore(showFailCases, input)\n        }\n        return true\n    }\n    return false\n}\n\n\n\nexport default function run() {\n    return hideFailCases();\n}\n","// import \"./content.css\";\n// import { message } from \"antd\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import { Menu, Dropdown, Button } from \"antd\";\n// import { DownOutlined, UserOutlined } from \"@ant-design/icons\";\nimport {\n  // bjwd,\n  getStorage,\n  setCloundStorage,\n  // addStyle,\n} from \"./utils\";\n// import zenAble from \"./zen/zenMode\";\nimport hideFailCases from \"./submission/hideFailCases\";\nimport { t as tt } from \"./locales\";\nlet documentLang = document.documentElement.lang;\nconst t = (keypath, slotText) => tt(keypath, slotText, documentLang);\n\n// WTF!  ant message didn't go well with chrome extension?\nconst message = {\n  success({ content }) {\n    //\n  },\n  warn({ content }) {\n    window.alert(content);\n  },\n  loading(content) {\n    //\n    return () => null;\n  },\n};\n\n// import AccessToken from \"./components/AccessToken\";\n\n// class SolutionButton extends PureComponent {\n//   static propTypes = {};\n\n//   static defaultProps = {};\n//   constructor() {\n//     super();\n//     this.state = {\n//       modalVisible: false,\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <AccessToken\n//           visible={this.state.modalVisible}\n//           onOk={() =>\n//             this.setState({\n//               modalVisible: false,\n//             })\n//           }\n//           onCancel={() =>\n//             this.setState({\n//               modalVisible: false,\n//             })\n//           }\n//         />\n//         <Dropdown\n//           style={{ marginLeft: \"10px\" }}\n//           type=\"link\"\n//           onClick={() => {\n//             //\n//           }}\n//           overlay={\n//             <Menu onClick={() => this.setState({ modalVisible: true })}>\n//               <Menu.Item key=\"1\">填入 access token</Menu.Item>\n//             </Menu>\n//           }\n//         >\n//           <Button>写题解</Button>\n//         </Dropdown>\n//       </>\n//     );\n//   }\n// }\n\n// if (testCase[i] === '\"') {\n//   while (i < testCase.length && testCase[i] !== '\"') {\n//     stack.push(testCase[i]);\n//   }\n//   stack.push(\"\\n\");\n// } else\n\n// testcase eg: `bottom = \"BCD\", allowed = [\"BCG\", \"CDE\", \"GEA\", \"FFF\"], c = [1,2,3], d = 2`\n// function normalize(testCase, includeArray = true) {\n//   testCase = testCase.trim().replace(/\\n/g, \"\").replace(\"&nbsp;\", \"\");\n\n//   // 单一参数\n//   // console.log(testCase);\n//   if (!testCase.includes(\"=\")) {\n//     // 数组直接返回\n//     // eslint-disable-next-line\n//     if (testCase.includes(\"[\") || testCase.includes('\"')) {\n//       return testCase;\n//     } else {\n//       // 输入: 3, 2, 0, 0\n//       // 输入: 0.0625\n\n//       const parts = testCase.split(\",\");\n//       if (parts.length === 0) return parts.join(\"\");\n//       return parts.join(\"\\n\");\n//     }\n//   }\n//   let stack = [];\n//   let i = 0;\n//   while (i < testCase.length) {\n//     while (i < testCase.length && testCase[i] !== \"=\") {\n//       i += 1;\n//     }\n//     // skip =\n//     i += 1;\n\n//     while (i < testCase.length && testCase[i] !== \"[\" && testCase[i] !== \",\") {\n//       stack.push(testCase[i]);\n//       i += 1;\n//     }\n//     if (testCase[i] === \",\") {\n//       // skip ,\n//       i += 1;\n//       stack.push(\"\\n\");\n//     } else if (includeArray) {\n//       // 解析为数组\n//       // cnt 左括号[ 与 右括号] 个数的差值\n//       let cnt = 0;\n//       while (i < testCase.length) {\n//         stack.push(testCase[i]);\n//         cnt += testCase[i] === \"[\";\n//         cnt -= testCase[i] === \"]\";\n//         i += 1;\n//         if (cnt === 0) {\n//           if (i !== testCase.length) {\n//             stack.push(\"\\n\");\n//           }\n\n//           break;\n//         }\n//       }\n//     } else {\n//       while (i < testCase.length) {\n//         stack.push(testCase[i]);\n//         i += 1;\n//       }\n//     }\n//   }\n//   const ans = stack.join(\"\");\n//   if (includeArray && ans[ans.length - 1] !== testCase[testCase.length - 1]) {\n//     return normalize(testCase, false);\n//   }\n//   return stack.join(\"\");\n// }\n\n// function extractTestCase(text, prefix) {\n//   const possiblePrefixs = [\n//     \"输出\",\n//     \"返回\",\n//     \"Output\",\n//     \"output\",\n//     \"Return\",\n//     \"return\",\n//     \"\",\n//   ];\n//   for (let tag of possiblePrefixs) {\n//     const testCase = text.match(new RegExp(`${prefix}(.*)${tag}`, \"s\"));\n//     if (testCase && testCase.length > 1) {\n//       return testCase;\n//     }\n//   }\n//   return [];\n// }\n\n// function getProviedTestCases(includeArray = true) {\n//   const possibleTags = [\"pre\", \"p\"];\n//   const possiblePrefixs = [\"输入：\", \"输入:\", \"Input:\", \"input:\"];\n//   const ans = [];\n//   for (let tag of possibleTags) {\n//     const pres = document.querySelectorAll(tag);\n\n//     for (let prefix of possiblePrefixs) {\n//       for (var i = 0; i < pres.length; ++i) {\n//         if (pres[i].innerText.includes(prefix)) {\n//           const testcase = extractTestCase(pres[i].innerText, prefix);\n//           if (!testcase || testcase.length <= 1) {\n//             bjwd();\n//             return [];\n//           }\n//           ans.push(normalize(testcase[1], includeArray));\n//         }\n//       }\n//       if (ans.length > 0) return ans;\n//     }\n//   }\n//   return ans;\n// }\n// const menu = (\n//   <Menu onClick={() => handleTestCaseClick(false)}>\n//     <Menu.Item key=\"1\" icon={<UserOutlined />}>\n//       测试用例不包含数组选这个\n//     </Menu.Item>\n//   </Menu>\n// );\n\n// function handleTestCaseClick(includeArray) {\n//   const cases = getProviedTestCases(includeArray);\n//   if (cases.filter(Boolean).length === 0) return bjwd();\n//   copyToClipboard(cases.join(\"\\n\"));\n//   message.success({\n//     content: \"复制成功~\",\n//   });\n// }\n\nfunction goToVisDebug() {\n  const language = getCodeLanguage();\n  const supportedLanguages = [\"Python3\", \"JavaScript\", \"C++\"];\n  const languageMap = {\n    Python3: \"3\",\n    Java: \"java\",\n    JavaScript: \"js\",\n    \"C++\": \"cpp_g%2B%2B9.3.0\",\n    C: \"c_gcc9.3.0\",\n  };\n  const prefixMap = {\n    Python3: `\n  # ${t(\"app.linkedListCommnet\")}\n  # eg：head = ListNodes([4,2,1,3]).head\n  # class ListNodes:\n  #     def __init__(self, vals)->ListNode:\n  #         cur = dummy = ListNode() \n  #         for val in vals:\n  #             nxt = ListNode(val)\n  #             cur.next = nxt\n  #             cur = nxt\n  #         self.head = dummy.next\n`,\n    JavaScript: `\n// ${t(\"app.linkedListCommnet\")}\n// eg：head = ListNodes([4,2,1,3]).head\n//   function ListNodes(vals) {\n//       let cur = new ListNode()\n//       let dummy = cur\n//       for(const val of vals) {\n//           const nxt = new ListNode(val)\n//           cur.next = nxt\n//           cur = nxt\n//       }\n//       return dummy.next\n//   }    \n`,\n    java: \"\",\n    \"C++\": `\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <atomic>\n#include <chrono>\n#include <condition_variable>\n#include <forward_list>\n#include <future>\n#include <initializer_list>\n#include <mutex>\n#include <random>\n#include <ratio>\n#include <regex>\n#include <scoped_allocator>\n#include <system_error>\n#include <thread>\n#include <tuple>\n#include <typeindex>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n#endif\n\nusing namespace std;    \n`,\n    C: \"\",\n  };\n  const suffixMap = {\n    Python3: `\n# ${t(\"app.visualDebugComment\")}\nSolution().xxx(yyy)\n`,\n    JavaScript: `\n// ${t(\"app.visualDebugComment\")}\nxxx(yyy)\n`,\n    \"C++\": `\nint main()\n{\n  Solution s;\n  // ${t(\"app.visualDebugComment\")}\n  s.xxx(yyy);\n  return 0;\n}\n`,\n    C: \"\",\n    Java: \"\",\n  };\n  if (!supportedLanguages.includes(language))\n    return message.warn({\n      content: `${t(\"app.visualDebugSupport\")} ${supportedLanguages.join(\",\")}`,\n    });\n  const code =\n    (prefixMap[language] || \"\") +\n    window?.monaco?.editor?.getModels()[0]?.getValue() +\n    (suffixMap[language] || \"\");\n  window.open(\n    `https://pythontutor.com/visualize.html#code=${encodeURIComponent(\n      code\n    )}&cumulative=false&curInstr=0&heapPrimitives=nevernest&mode=display&origin=opt-frontend.js&py=${\n      languageMap[language]\n    }&rawInputLstJSON=%5B%5D&textReferences=false`\n  );\n}\n\nfunction getCodeLanguage() {\n  const langMap = {\n    cpp: \"C++\",\n    python3: \"Python3\",\n    java: \"Java\",\n    c: \"C\",\n    javascript: \"JavaScript\",\n  };\n  const l =\n    window?.monaco?.editor?.getModels()[0]?.getLanguageId() ||\n    localStorage.getItem(\"global_lang\");\n\n  return langMap[l.toLowerCase()];\n}\nfunction insertButton() {\n  const customBtnStyle = {\n    \"line-height\": \"1\",\n    cursor: \"pointer\",\n    \"vertical-align\": \"text-top\",\n  };\n  const buttons = document.querySelectorAll(\"button\");\n\n  for (var i = 0; i < buttons.length; ++i) {\n    if (buttons[i].innerText.includes(t(\"Locale.app.run\"))) {\n\n      // const container = document.createElement(\"div\");\n\n      // buttons[i].parentElement.prepend(container);\n      // ReactDOM.render(\n      //   <Dropdown overlay={menu} style={{ marginLeft: \"10px\" }}>\n      //     <Button onClick={() => handleTestCaseClick(true)}>\n      //       复制所有内置用例 <DownOutlined />\n      //     </Button>\n      //   </Dropdown>,\n      //   container\n      // );\n\n      // const writeSolutionButton = document.createElement(\"div\");\n      // const copyButton = buttons[i].cloneNode(true);\n      // copyButton.innerText = \"复制用例\";\n      // copyButton.style[\"margin-left\"] = \"10px\";\n      // copyButton.onclick = () => {\n      //   const cases = getProviedTestCases();\n      //   if (cases.filter(Boolean).length === 0) return bjwd();\n      //   copyToClipboard(cases.join(\"\\n\"));\n      //   message.success({\n      //     content: \"复制成功~\",\n      //   });\n      // };\n      // buttons[i].parentElement.prepend(copyButton);\n      const writeSolutionButton = document.createElement(\"a\");\n      writeSolutionButton.innerText = t(\"Locale.app.wirteSolution\");\n      Object.assign(writeSolutionButton.style, customBtnStyle);\n      writeSolutionButton.className = buttons[i].className;\n\n      writeSolutionButton.onclick = () => {\n        // d: \"<a href=\"/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable/\">1579. 保证图可完全遍历</a>\"\n\n        const desc = document.querySelector(\n          \"[data-track-load=\\\"description_content\\\"]\"\n        ).innerHTML;\n\n        if (!desc) {\n          return message.warn({\n            content: t(\"app.getProblemError\"),\n          });\n        }\n        const title = document.title;\n        const link = window.location.href;\n        const language = getCodeLanguage();\n        // let code = document.querySelector(\n        //   \".monaco-scrollable-element,.editor-scrollable\"\n        // ).innerText;\n        const code = window?.monaco?.editor?.getModels()[0]?.getValue();\n\n        // const desc = document.querySelector(\"#question-detail-main-tabs\")?.children[1]?.children[0]?.children[1]?.innerText;\n\n        const hide = message.loading(t(\"app.savingProblem\"), 0);\n        writeSolutionButton.setAttribute(\"disabled\", true);\n        // Dismiss manually and asynchronously\n        setTimeout(() => {\n          hide();\n          writeSolutionButton.removeAttribute(\"disabled\");\n        }, 30000); // 超时 30s 都没好，那就别转了\n        getStorage(\"leetcode-cheatsheet-token\")\n          .then((res) => res.result.value)\n          .then((res) => {\n            if (!res.raw) throw new Error(\"whatever\");\n            return res;\n          })\n          .catch(() => ({\n            raw: \"e574bf60b50d8d2d2db2320ee83aba3cd29cecf2\",\n          }))\n          .then((res) => {\n            const t = res.raw;\n            setCloundStorage(\n              {\n                title,\n                link,\n                language,\n                code,\n                desc,\n              },\n\n              {\n                token: t,\n              }\n            )\n              .then((res) => {\n                hide();\n                writeSolutionButton.removeAttribute(\"disabled\");\n                if (res.id) {\n                  window.open(\n                    `https://leetcode-pp.github.io/leetcode-cheat/?issue_number=${res.id}&tab=solution-template`\n                  );\n                } else {\n                  message.warn({\n                    content: t(\"app.githubAPIError\"),\n                  });\n                  setTimeout(() => {\n                    window.open(\n                      `https://leetcode-pp.github.io/leetcode-cheat/?title=${title}&link=${link}&language=${language}&tab=solution-template`\n                    );\n                  }, 2000);\n                }\n              })\n              .catch(() => {\n                hide();\n                writeSolutionButton.removeAttribute(\"disabled\");\n              });\n          });\n      };\n\n      // ReactDOM.render(<SolutionButton />, writeSolutionButton);\n      // ele.appendChild(writeSolutionButton);\n\n      const visDebugButton = document.createElement(\"a\");\n      visDebugButton.innerText = t(\"Locale.app.visualizationDebug\");\n      Object.assign(visDebugButton.style, customBtnStyle);\n      visDebugButton.className = buttons[i].className;\n\n      visDebugButton.onclick = goToVisDebug;\n      if (documentLang === \"en\") {\n        buttons[i].parentElement.prepend(visDebugButton);\n        buttons[i].parentElement.prepend(writeSolutionButton);\n      } else {\n        buttons[i].parentElement.parentElement.prepend(writeSolutionButton);\n\n        buttons[i].parentElement.parentElement.prepend(visDebugButton);\n      }\n      inserted = true;\n    } else if (buttons[i].innerText.includes(t(\"app.submit\"))) {\n      const click = buttons[i].onclick;\n      const originalFn = buttons[i]\n      buttons[i].onclick = (...args) => {\n        click.call(originalFn, ...args);\n\n        // try to hide failed test cases\n        let tries = 0;\n        const hideFailCasesJob = setInterval(() => {\n          if (hideFailCases()) {\n            clearInterval(hideFailCasesJob);\n          }\n          // 300 times means 30s\n          if (tries > 300) return;\n          tries++;\n        }, 100);\n      };\n\n      submitProxied = true;\n    }\n  }\n  return false;\n}\nlet inserted = false;\nlet retried = 0;\nlet submitProxied = false;\nconst MAX_TRY = 10;\n\n// 去除智能提示\n// addStyle(`\n// .monaco-editor .editor-widget {\n//   display: none !important;\n//   visibility: hidden !important;\n// }\n// `);\n\nconst timerId = setInterval(() => {\n  if (inserted && submitProxied) return clearInterval(timerId);\n  if (retried > MAX_TRY) {\n    clearInterval(timerId);\n    return console.error(t(\"app.initializeContentScriptFailed\"));\n  }\n\n  // 防止 insertButton 在本插件应用中执行，会匹配到题目中包含 \"Run\" 的情况,例如：“1480. Running Sum of 1d Array”\n  if (document.title.includes(\"力扣加加\")) return\n  \n  insertButton();\n\n  // if (inserted && submitProxied) {\n  //   window.location.title = \"\";\n  //   // 可进入禅定模式\n  //   zenAble();\n  // }\n  retried++;\n}, 1000);\n\n// class Main extends React.Component {\n//   render() {\n//     return (\n//       <div className={\"my-extension\"}>\n//         <h1 onClick={t}>Hello world - My first Extension</h1>\n//       </div>\n//     );\n//   }\n// }\n\n// const app = document.createElement(\"div\");\n// app.id = \"my-extension-root\";\n// document.body.appendChild(app);\n\n// ReactDOM.render(<Main />, app);\n\n// history.pushState = (f => function pushState() {\n//   var ret = f.apply(this, arguments);\n//   window.dispatchEvent(new Event('pushstate'));\n//   window.dispatchEvent(new Event('locationchange'));\n//   return ret;\n// })(history.pushState);\n\n// history.replaceState = (f => function replaceState() {\n//   var ret = f.apply(this, arguments);\n//   window.dispatchEvent(new Event('replacestate'));\n//   window.dispatchEvent(new Event('locationchange'));\n//   return ret;\n// })(history.replaceState);\n\n// window.addEventListener('popstate', () => {\n//   window.dispatchEvent(new Event('locationchange'))\n// });\n\n// window.addEventListener('locationchange', function (e) {\n//   const url = e.target.location.href;\n//   console.log('hideFailCases')\n//   if (url.endsWith(\"submissions/\")) {\n\n//   }\n// })\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"sourceRoot":""}