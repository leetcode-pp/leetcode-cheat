{"version":3,"sources":["locales/index.js","locales/zh.js","locales/en.js","utils.js","constant/index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","isInit","lang","ALL_LANGS","zh","en","setLang","_lang","initLang","_ref","_asyncToGenerator","_callee","currentUrl","isCnHref","_context","includes","LEETCODE_CN_URL","_x","apply","arguments","getLeetcodeUrlForLang","LEETCODE_URL","t","keypath","slotText","l","langData","Locale","content","getForPath","Array","isArray","item","idx","replace","concat","module","app","preview","copyMdOrigin","fullScreen","toUse","custom","presets","changeLang","copy","save","yes","no","delete","delTitle","deleteSuccess","saveSuccess","copySuccess","article","recommendedQuestions","goForDictation","contribution","back","viewSolution","viewInHandpickCollection","notCollected","allCollected","writingExplanation","goToTheWebsiteToUse","checkTips","checkBtn","selfIntroduction","allSolutions","columns","title","tag","initializeContentScriptFailed","run","submit","wirteSolution","visualizationDebug","linkedListCommnet","visualDebugComment","visualDebugSupport","getProblemError","savingProblem","githubAPIError","notYet","problem","743","1109","1314","1462","1480","1584","2536","codeTemplate","perSum","tips","item1","item2","item3","item4","graph","item5","item6","moreTemplate","dataStructureVisualization","incrementalUsage","explain1","explain2","explain3","explain4","explanationTemplate","problemAddress","problemDesc","preKnowledge","company","thinking","keyPoints","languageSupport","complexityAnalysis","complexityDeclare","timeComplexity","spaceComplexity","howToUse","programmingLanguage","commonFormulas","noBackup","restore","backupTips","afterUpdateTemplateTips","afterUpdateThemeTips","complexityQuickCheck","dataScale","learningRoute","checkForUpdates","aboutMe","copyToClipboard","str","el","document","createElement","body","appendChild","select","execCommand","removeChild","isInExtension","process","REACT_APP_BUILD_TARGET","getUrlParameter","URLSearchParams","window","location","search","get","uuidv4","c","r","Math","random","toString","text","cb","copyFrom","textContent","blur","Function","getStorage","k","chrome","storage","localStorage","JSON","parse","getItem","setStorage","v","sync","set","_defineProperty","setItem","stringify","console","log","setCloundStorage","_ref4","token","fetch","headers","customer","address","res","json","getCloundStorage","id","_ref5","response","order","debounce","wait","callback","timerId","this","args","clearTimeout","setTimeout","path","_step2","pathArr","split","_iterator2","_createForOfIteratorHelper","s","n","e","f","ISSUES_URL","CONTRIBUTE_COMPANY_URL","CONTRIBUTE_PROGRAMMING_LANGUAGE_URL"],"mappings":"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","file":"static/js/0-5fb50d3aad4a74c7f8e4.chunk.js","sourcesContent":["import { getUrlParams, getForPath } from \"../utils\";\nimport { LEETCODE_CN_URL, LEETCODE_URL } from \"../constant\";\nimport zh from \"./zh\";\nimport en from \"./en\";\n\nconst DEV_URL_LANG =\n  process.env.NODE_ENV === \"development\"\n    ? getUrlParams(window.location.href)?.lang\n    : undefined;\n\n// 支持在 url 中传入 lang 参数，否则本地开发刷新页面后会恢复为默认语言\nconst DEFAULT_LANG = DEV_URL_LANG || \"zh\";\n\nlet isInit = false;\n\nexport let lang = DEFAULT_LANG;\n\nconst ALL_LANGS = {\n  zh,\n  en,\n};\n\n// export const ALL_LANG_OPTIONS = {\n//   zh: \"简体中文\",\n//   en: \"English\",\n// };\n\nexport const setLang = (_lang) => {\n  lang = _lang || DEFAULT_LANG;\n};\n\nexport const initLang = async (currentUrl) => {\n  if (isInit) return;\n\n  const isCnHref = currentUrl.includes(LEETCODE_CN_URL);\n  setLang(isCnHref ? \"zh\" : \"en\");\n  isInit = true;\n};\n\nexport const getLeetcodeUrlForLang = () => {\n  return lang === \"zh\" ? LEETCODE_CN_URL : LEETCODE_URL;\n};\n\n/**\n * @param {string} keypath\n * @param {string | string[]} slotText\n * @param {string} l lang\n * @returns {string}\n */\nexport const t = (keypath, slotText, l) => {\n  const langData = { Locale: ALL_LANGS[l || lang] };\n  if (!keypath) return \"\";\n  if (!keypath.includes(\"Locale\")) {\n    keypath = \"Locale.\" + keypath;\n  }\n  let content = getForPath(langData, keypath);\n  if (slotText) {\n    if (Array.isArray(slotText)) {\n      slotText.forEach((item, idx) => {\n        content = content.replace(`{${idx}}`, item);\n      });\n    } else {\n      content = content.replace(\"{slotText}\", slotText);\n    }\n  }\n  return content;\n};\n\nexport default ALL_LANGS[lang];\n","const zh = {\n  app: {\n    name: \"力扣加加\",\n    preview: \"预览\",\n    copyMdOrigin: \"点击复制 MarkDown 原文\",\n    fullScreen: \"全屏模式(退出请按 ESC)\",\n    toUse: \"去使用\",\n    custom: \"自定义\",\n    presets: \"预设\",\n    setLang: \"设置语言\",\n    changeLang: \"English\",\n    copy: \"复制\",\n    save: \"保存\",\n    yes: \"是\",\n    no: \"否\",\n    delete: \"删除\",\n    delTitle: \"确认要删除么？\",\n    deleteSuccess: \"删除成功~\",\n    saveSuccess: \"保存成功~\",\n    copySuccess: \"复制成功~\",\n    article: \"文章\",\n    recommendedQuestions: \"推荐题目：\",\n    goForDictation: \"去默写\",\n    contribution: \"纠错 or 贡献其他语言\",\n    back: \"返回主页\",\n    viewSolution: \"查看本题题解\",\n    viewInHandpickCollection: \"该题已被收录到精选合集《{slotText}》点击查看\",\n    notCollected: \"本题暂未被力扣加加收录，点击查看所有已收录题目~\",\n    allCollected: \"所有已收录的题目\",\n    writingExplanation: \"正在撰写题解...\",\n    goToTheWebsiteToUse: \"去网站使用\",\n    checkTips:\n      \"一般只要你开启了自动更新，那么当插件更新之后chrome会在五个小时以内自动更新。如果你想第一时间更新，或者您禁用了自动更新，都可以在这里检测最新版。\",\n    checkBtn: \"检测更新\",\n    selfIntroduction:\n      \"作者是一个 Github 40K star 的前端架构师，leetcode 刷题插件leetcode-cheatsheet作者，掌握各种算法套路，写了十几万字的算法刷题套路电子书，公众号回复【电子书】获取。\",\n    allSolutions: {\n      columns: {\n        title: \"题目\",\n        tag: \"标签\",\n      },\n    },\n    initializeContentScriptFailed: \"初始化 chrome 插件 content script 失败\",\n    run: \"运行\",\n    submit: \"提交\",\n    wirteSolution: \"写题解\",\n    visualizationDebug: \"可视化调试\",\n    linkedListCommnet:\n      \"如果你在调试链表题目，手动生成链表很麻烦，想快速生成链表可以注释如下方法，并使用如下方法，输入一个数组，返回一个链表\",\n    visualDebugComment:\n      \"替换下方的 xxx 为主函数名， yyy 为测试用例参数开启调试\",\n    visualDebugSupport: \"当前仅支持\",\n    getProblemError: \"获取题目描述失败，请先切换到题目描述标签页\",\n    savingProblem: \"正在存储题目信息，请稍后~\",\n    githubAPIError:\n      \"使用 Github API 失败，已为您切换为普通模式，普通模式仅可自动带入题目名称，题目地址以及题解语言。\",\n    notYet: \"暂无\",\n  },\n  problem: {\n    743: \"743. 网络延迟时间\",\n    1109: \"1109. 航班预订统计\",\n    1314: \"1314. 矩阵区域和\",\n    1462: \"1462. 课程表 IV\",\n    1480: \"1480. 一维数组的动态和\",\n    1584: \"1584. 连接所有点的最小费用\",\n    2536: \"2536. 子矩阵元素加 1\",\n  },\n  codeTemplate: {\n    name: \"代码模板\",\n    perSum: {\n      title: \"前缀和\",\n      tips: \"建议先学会之后再用模板。 如果你还不会的话，可以看看这篇\",\n      item1: \"一维前缀和\",\n      item2: \"二维前缀和\",\n      item3: \"一维差分数组\",\n      item4: \"二维差分数组\",\n    },\n    graph: {\n      title: \"图\",\n      item1: \"dijkstra(单源贪心最短路径)\",\n      item2: \"floyd_warshall(多源动态规划最短路径)\",\n      item3: \"Bellman–Ford（单源动态规划最短路径）\",\n      item4: \"Kruskal（又称加边法，是一种最小生成树算法）\",\n      item5: \"Prim（又称加点法，是一种最小生成树算法）\",\n      item6: \"Kahn（基于BFS的拓扑排序）\",\n    },\n\n    moreTemplate: \"更多模板后续陆续更新~\",\n  },\n  dataStructureVisualization: {\n    name: \"数据结构可视化\",\n    incrementalUsage: \"增量使用\",\n    explain1:\n      \"暂不支持编辑功能。如果需要编辑，可通过先“使用”再“保存”，最后“删除”原有的数据，从而间接实现。\",\n    explain2: \"模板可以增量使用。点击”去使用“的下拉三角，并选择增量使用即可。\",\n    explain3:\n      \"使用的模板会根据你鼠标的位置生成。比如你的鼠标在点(100, 100)，那么模板会整体偏移 (100, 100)个单位。如果此时模板并不是正好以(100, 100)为左上顶点，说明模板本身制作的时候就不是以(0,0)为左上顶点制作的。大家制作自定义模板的话需要注意这一点。\",\n    explain4: \"你也可以选择直接使用原生 excalidraw \",\n  },\n\n  explanationTemplate: {\n    name: \"题解模板\",\n    goToTheWebsiteToUse: \"去网站使用\",\n    problemAddress: \"题目地址\",\n    problemDesc: \"题目描述\",\n    preKnowledge: \"前置知识\",\n    company: \"公司\",\n    thinking: \"思路\",\n    keyPoints: \"关键点\",\n    languageSupport: \"语言支持\",\n    complexityAnalysis: \"复杂度分析\",\n    complexityDeclare: \"令 n 为数组长度。\",\n    timeComplexity: \"时间复杂度\",\n    spaceComplexity: \"空间复杂度\",\n    howToUse: \"如何使用？\",\n    programmingLanguage: \"编程语言:1\",\n    commonFormulas: \"常用公式（点击可复制）：\",\n    noBackup: \"没有找到任何备份文件\",\n    restore: \"恢复上次编辑内容\",\n    backupTips:\n      \"题解每五秒备份一次，如果你不小心刷新了浏览器可以点击下方的恢复按钮还原。由于是覆盖式备份，因此仅会保存最后一次编辑的内容。\",\n    afterUpdateTemplateTips: \"后续考虑提供更多题解模板。\",\n    afterUpdateThemeTips: \"后续考虑支持更多主题，以及用户自定义主题。\",\n  },\n  complexityQuickCheck: {\n    name: \"复杂度速查\",\n    tips: \"不懂为什么？点这里\",\n    dataScale: \"数据规模\",\n    timeComplexity: \"算法可接受时间复杂度\",\n  },\n  learningRoute: {\n    name: \"学习路线\",\n  },\n  checkForUpdates: {\n    name: \"检查更新\",\n  },\n  aboutMe: {\n    name: \"关于我\",\n  },\n};\n// export default zh;\nmodule.exports = zh;\n","const en = {\n  app: {\n    name: \"LeetCode Cheatsheet\",\n    preview: \"Preview\",\n    copyMdOrigin: \"Click to copy MarkDown origin\",\n    fullScreen: \"Full Screen (Press ESC to exit)\",\n    toUse: \"To Use\",\n    custom: \"Custom\",\n    presets: \"Presets\",\n    setLang: \"Set Language\",\n    changeLang: \"中文\",\n    copy: \"copy\",\n    save: \"save\",\n    yes: \"yes\",\n    no: \"no\",\n    delete: \"delete\",\n    delTitle: \"Are you sure you want to delete it?\",\n    deleteSuccess: \"Delete successfully~\",\n    saveSuccess: \"Save successfully~\",\n    copySuccess: \"Copy successfully~\",\n    article: \"article\",\n    recommendedQuestions: \"Recommended Questions:\",\n    goForDictation: \"go for dictation\",\n    contribution: \"Correction or contribution to other languages\",\n    back: \"Back to Home page\",\n    viewSolution: \"View solution\",\n    viewInHandpickCollection:\n      \"This question has been collected in the handpick collection《{slotText}》Click to view\",\n    notCollected:\n      \"This question has not been collected by LeetCode Plus, click to view all collected questions\",\n    allCollected: \"All collected questions\",\n    writingExplanation: \"Writing explanation\",\n    goToTheWebsiteToUse: \"Go to the website to use\",\n    checkTips:\n      \"Generally, as long as you turn on automatic updates, chrome will automatically update within five hours after the plug-in is updated. If you want to update as soon as possible, or if you disable automatic updates, you can check the latest version here.\",\n    checkBtn: \"Check for updates\",\n    selfIntroduction:\n      \"The author is a front-end architect with 40K stars on Github, the author of the leetcode-cheatsheet leetcode plugin, master all kinds of algorithm routines, and wrote hundreds of thousands of words of algorithm brushing e-books. Reply to the public account [电子书] to get.\",\n    allSolutions: {\n      columns: {\n        title: \"Title\",\n        tag: \"Tag\",\n      },\n    },\n    initializeContentScriptFailed:\n      \"Failed to initialize the chrome plugin content script\",\n    run: \"Run\",\n    submit: \"Submit\",\n    wirteSolution: \"Write Solution\",\n    visualizationDebug: \"Visualization Debug\",\n    linkedListCommnet:\n      \"If you are debugging linked list questions, it is very troublesome to generate linked lists manually. If you want to quickly generate linked lists, you can comment out the following method and use the following method to enter an array and return a linked list.\",\n    visualDebugComment:\n      \"Replace xxx below with the main function name, yyy with the test case parameter, and turn on debugging\",\n    getProblemError:\n      \"Failed to get the problem description, please switch to the problem description tab first\",\n    savingProblem: \"Saving problem information, please wait~\",\n    githubAPIError:\n      \"Failed to use Github API, has been switched to normal mode, normal mode can only automatically bring in the problem name, problem address and solution language.\",\n    notYet: \"Not yet\",\n  },\n  problem: {\n    743: \"743. Network Delay Time\",\n    1109: \"1109. Corporate Flight Bookings\",\n    1314: \"1314. Matrix Block Sum\",\n    1462: \"1462. Course Schedule IV\",\n    1480: \"1480. Running Sum of 1d Array\",\n    1584: \"1584. Min Cost to Connect All Points\",\n    2536: \"2536. Increment Submatrices by One\",\n  },\n  codeTemplate: {\n    name: \"Code Template\",\n    perSum: {\n      title: \"Prefix Sum\",\n      tips: \"It is recommended to learn it first and then use the template. If you don't know it yet, you can take a look at this article\",\n      item1: \"One-dimensional prefix sum\",\n      item2: \"Two-dimensional prefix sum\",\n      item3: \"One-dimensional difference array\",\n      item4: \"Two-dimensional difference array\",\n    },\n    graph: {\n      title: \"Graph\",\n      item1: \"dijkstra(single-source greedy shortest path)\",\n      item2: \"floyd_warshall(multi-source dynamic programming shortest path)\",\n      item3: \"Bellman–Ford(single-source dynamic programming shortest path)\",\n      item4:\n        \"Kruskal(also known as adding edge method, is a minimum spanning tree algorithm)\",\n      item5:\n        \"Prim(also known as adding point method, is a minimum spanning tree algorithm)\",\n      item6: \"Kahn(topological sorting based on BFS)\",\n    },\n    moreTemplate: \"More templates will be updated one after another~\",\n  },\n  dataStructureVisualization: {\n    name: \"Data Structure Visualization\",\n    incrementalUsage: \"Incremental Usage\",\n    explain1:\n      \"The editing function is not supported. If you need to edit, you can do so indirectly by first \\\"use\\\", then \\\"save\\\", and finally \\\"delete\\\" the original data.\",\n    explain2:\n      \"Templates can be used incrementally. Click the drop-down triangle of 'to use' and select Incremental Usage.\",\n    explain3:\n      \"The template will be generated according to the position of your mouse. For example, if your mouse is at point (100, 100), the template will be offset by (100, 100) units as a whole. If the template is not exactly at (100, 100), it means that the template itself was not created with (0, 0) as the top-left corner. When creating custom templates, it's important to keep this in mind.\",\n    explain4: \"You can also choose to use the native excalidraw directly \",\n  },\n\n  explanationTemplate: {\n    name: \"Explanation Template\",\n    goToTheWebsiteToUse: \"Go to the website to use\",\n    problemAddress: \"Problem Address\",\n    problemDesc: \"Problem Description\",\n    preKnowledge: \"Pre Knowledge\",\n    company: \"Company\",\n    thinking: \"Thinking\",\n    keyPoints: \"Key Points\",\n    languageSupport: \"Language Support\",\n    complexityAnalysis: \"Complexity Analysis\",\n    complexityDeclare: \"Let n be the length of the array.\",\n    timeComplexity: \"Time Complexity\",\n    spaceComplexity: \"Space Complexity\",\n    howToUse: \"How to use it?\",\n    programmingLanguage: \"Programming Language:\",\n    commonFormulas: \"Common formulas (click to copy):\",\n    noBackup: \"No backup file found\",\n    restore: \"Restore last edit content\",\n    backupTips:\n      \"The explanation is backed up every five seconds. If you accidentally refresh the browser, you can click the restore button below to restore it. Since it is an overwrite backup, only the last edited content will be saved.\",\n    afterUpdateTemplateTips:\n      \"More explanation templates will be provided later.\",\n    afterUpdateThemeTips:\n      \"More themes and user-defined themes will be supported later.\",\n  },\n  complexityQuickCheck: {\n    name: \"Complexity Quick Check\",\n    tips: \"Don't understand why? Click here\",\n    dataScale: \"Data Scale\",\n    timeComplexity: \"Algorithm acceptable time complexity\",\n  },\n  learningRoute: {\n    name: \"Learning Route\",\n  },\n  checkForUpdates: {\n    name: \"Check for Updates\",\n  },\n  aboutMe: {\n    name: \"About Me\",\n  },\n};\n// export default en;\nmodule.exports = en;\n","import { ISSUES_URL } from \"./constant/index\";\n\nfunction TreeNode(value) {\n  return {\n    left: null,\n    right: null,\n    value,\n  };\n}\nconst message = {\n  error({ content }) {\n    window.alert(content);\n  },\n};\nconst seen = {};\nexport function getRandomUnique(lower, upper, amount) {\n  console.log(seen);\n  // [10, 20]10\n  const start = getRandom(0, upper - lower - amount);\n  if (`${lower}-${upper}` in seen)\n    return seen[`${lower}-${upper}`].slice(start, start + amount + 1);\n\n  const condidates = Array.from(Array(upper - lower + 1), (_, i) => i + lower);\n\n  const n = condidates.length;\n  for (let i = n - 1; i >= 0; i--) {\n    const temp = condidates[i];\n    const number = (Math.random() * n) >>> 0;\n    condidates[i] = condidates[number];\n    condidates[number] = temp;\n  }\n  seen[`${lower}-${upper}`] = condidates;\n  return condidates.slice(start, start + amount + 1);\n}\n\nexport function getRandom(n, m) {\n  return Math.round(Math.random() * (m - n) + n);\n}\nexport function copyToClipboard(str) {\n  try {\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function serialise_bfs(root) {\n  let ans = \"[\";\n  const q = [root];\n  let cur = null;\n\n  while (q.length > 0) {\n    cur = q.shift();\n    if (cur) {\n      q.push(cur.left);\n      q.push(cur.right);\n      ans += cur.value + \",\";\n    } else {\n      ans += \"null,\";\n    }\n  }\n\n  return ans.slice(0, -1) + \"]\";\n}\nexport function isInExtension() {\n  return process.env.REACT_APP_BUILD_TARGET === \"extension\";\n}\nexport function buildRandomTree({\n  amount = 10,\n  upper = 10,\n  lower = 0,\n  isUnique,\n}) {\n  let remain = amount;\n  let condidates = [];\n  if (isUnique) {\n    condidates = getRandomUnique(lower, upper, amount);\n  }\n\n  function dfs({ upper, lower }) {\n    if (remain <= 0) return null;\n    remain -= 1;\n\n    const root = TreeNode(\n      !isUnique ? getRandom(lower, upper) : condidates[remain]\n    );\n\n    if (Math.random() > 0.5) {\n      root.left = dfs({ upper, lower });\n    }\n    if (Math.random() > 0.5) {\n      root.right = dfs({ upper, lower });\n    }\n    return root;\n  }\n  return dfs({ upper, lower });\n}\n\nexport function bjwd() {\n  return message.error({\n    content: `\n        力扣不讲武德，不按套路出牌。不过没关系啊，你反馈给我，下次一定全部防出去！反馈到这里：${ISSUES_URL}\n      `,\n  });\n}\nexport function getUrlParameter(key) {\n  const searchParams = new URLSearchParams(window.location.search);\n  return searchParams.get(key);\n}\n\nexport function uuidv4() {\n  return \"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function deserialise_bfs(nodes) {\n  if (nodes.length === 0 || nodes[0] === \"null\") return null;\n  const root = TreeNode(nodes[0]);\n  const q = [root];\n  let i = 0;\n\n  while (q.length > 0 && i < nodes.length - 1) {\n    const cur = q.shift();\n\n    const l = TreeNode(nodes[i + 1]);\n    if (l.value !== \"null\") {\n      q.push(l);\n      cur.left = l;\n    }\n\n    if (i < nodes.length - 2) {\n      const r = TreeNode(nodes[i + 2]);\n\n      if (r.value !== \"null\") {\n        q.push(r);\n        cur.right = r;\n      }\n    }\n\n    i += 2;\n  }\n\n  return {\n    root,\n  };\n}\n\nexport function copy(text, cb) {\n  //Create a textbox field where we can insert text to.\n  var copyFrom = document.createElement(\"textarea\");\n\n  //Set the text content to be the text you wished to copy.\n  copyFrom.textContent = text;\n\n  //Append the textbox field into the body as a child.\n  //\"execCommand()\" only works when there exists selected text, and the text is inside\n  //document.body (meaning the text is part of a valid rendered HTML element).\n  document.body.appendChild(copyFrom);\n\n  //Select all the text!\n  copyFrom.select();\n\n  //Execute command\n  document.execCommand(\"copy\");\n\n  //(Optional) De-select the text using blur().\n  copyFrom.blur();\n\n  //Remove the textbox field from the document.body, so no other JavaScript nor\n  //other elements can get access to this.\n  document.body.removeChild(copyFrom);\n\n  if (cb instanceof Function) cb();\n}\n\nexport function getStorage(k) {\n  return new Promise((resolve, reject) => {\n    try {\n      // eslint-disable-next-line\n      if (chrome.storage) {\n        // eslint-disable-next-line\n        chrome.storage.get([k], resolve);\n      } else if (localStorage) {\n        resolve({\n          result: {\n            value: JSON.parse(localStorage.getItem(k)),\n          },\n        });\n      } else {\n        reject(\"未知错误\");\n      }\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function setStorage(k, v) {\n  return new Promise((resolve, reject) => {\n    try {\n      // eslint-disable-next-line\n      if (chrome.storage) {\n        // eslint-disable-next-line\n        chrome.storage.sync.set(\n          {\n            [k]: v,\n          },\n          resolve\n        );\n      } else if (localStorage) {\n        localStorage.setItem(k, JSON.stringify(v));\n        resolve();\n      } else {\n        reject(\"您可能禁用了存储功能~\");\n      }\n    } catch (err) {\n      console.log(err, k, v);\n      reject(\"当前没有存储权限，或者存储已达到上限~\");\n    }\n  });\n}\n\nexport function setCloundStorage(content, { token }) {\n  // return fetch(\"https://api.github.com/repos/azl397985856/stash/issues\", {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     Authorization: `token ${token}`,\n  //   },\n  //   body: JSON.stringify(content),\n  // })\n  //   .then((res) => res.json())\n  //   .then((res) => {\n  //     return {\n  //       ...res,\n  //       id: res.number,\n  //     };\n  //   });\n  return fetch(\"https://my-store2.p.rapidapi.com/order/new\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      \"x-rapidapi-key\": \"8be902d767mshf5d232d6b781084p166217jsn382abe83434f\",\n      \"x-rapidapi-host\": \"my-store2.p.rapidapi.com\",\n    },\n    body: JSON.stringify({\n      customer: JSON.stringify({\n        body: content,\n      }),\n      address: \"\",\n    }),\n  }).then((res) => res.json());\n}\n\nexport function getCloundStorage(id, { token }) {\n  // return fetch(\n  //   `https://api.github.com/repos/azl397985856/stash/issues/${id}`,\n  //   {\n  //     headers: {\n  //       accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: `token ${token}`,\n  //     },\n  //   }\n  // )\n  //   .then((res) => res.json())\n  //   .then((res) => JSON.parse(res.body));\n  return fetch(`https://my-store2.p.rapidapi.com/order/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"x-rapidapi-key\": \"8be902d767mshf5d232d6b781084p166217jsn382abe83434f\",\n      \"x-rapidapi-host\": \"my-store2.p.rapidapi.com\",\n    },\n  })\n    .then((res) => res.json())\n    .then((response) => {\n      return JSON.parse(response.order.customer).body;\n    });\n}\n\nexport function debounceComponent(component, wait) {\n  let timerId = null;\n  return (props) => {\n    clearTimeout(timerId);\n    component(props);\n  };\n}\nexport function debounce(fn, wait) {\n  let callback = fn;\n  let timerId = null;\n\n  function debounced() {\n    // 保存作用域\n    let context = this;\n    // 保存参数，例如 event 对象\n    let args = arguments;\n\n    clearTimeout(timerId);\n    timerId = setTimeout(function () {\n      callback.apply(context, args);\n    }, wait);\n  }\n\n  // 返回一个闭包\n  return debounced;\n}\nconst COLORS = [\n  \"magenta\",\n  \"red\",\n  \"volcano\",\n  \"orange\",\n  \"gold\",\n  \"lime\",\n  \"green\",\n  \"cyan\",\n  \"blue\",\n  \"geekblue\",\n  \"purple\",\n];\n\nexport function getColor(text) {\n  let ans = 0;\n  for (const c of text) ans += c.charCodeAt();\n  return COLORS[ans % COLORS.length];\n}\n\nexport const addStyle = (css) => {\n  const style = document.createElement(\"link\");\n  try {\n    style.innerHTML = css;\n  } catch (e) {\n    console.log(e);\n    style.styleSheet.cssText = css;\n  }\n  const head = document.getElementsByTagName(\"head\")[0];\n  head.appendChild(style);\n};\n\n/**\n * 获取url参数\n * @param {string} url\n * @returns object\n */\nexport const getUrlParams = (url) => {\n  let urlStr = url.split(\"?\")[1];\n  const urlSearchParams = new URLSearchParams(urlStr);\n  const result = Object.fromEntries(urlSearchParams.entries());\n  return result;\n};\n\n\n/**\n * 获取对象指定路径的值\n * @param {object} obj\n * @param {string} path\n * @returns any\n */\nexport const getForPath = (obj, path) => {\n  const pathArr = path.split(\".\");\n  let result = obj;\n  for (const key of pathArr) {\n    result = result[key];\n  }\n  return result;\n};","export const LEETCODE_CN_URL = \"https://leetcode.cn\";\nexport const LEETCODE_URL = \"https://leetcode.com\";\nexport const ISSUES_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues\";\nexport const CONTRIBUTE_COMPANY_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues/1\";\n\nexport const CONTRIBUTE_PROGRAMMING_LANGUAGE_URL =\n  \"https://github.com/azl397985856/leetcode-cheat/issues/4\";\n"],"sourceRoot":""}