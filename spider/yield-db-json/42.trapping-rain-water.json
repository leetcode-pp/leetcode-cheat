{
  "question": "42.trapping-rain-water",
  "companys": [
    "TODO"
  ],
  "tags": [
    "TODO"
  ],
  "reslove": [
    {
      "lang": "python",
      "code": "\nclass Solution:\n    def trap(self, heights: List[int]) -> int:\n        n = len(heights)\n        l, r = [0] * (n + 1), [0] * (n + 1)\n        ans = 0\n        for i in range(1, len(heights) + 1):\n            l[i] = max(l[i - 1], heights[i - 1])\n        for i in range(len(heights) - 1, 0, -1):\n            r[i] = max(r[i + 1], heights[i])\n        for i in range(len(heights)):\n            ans += max(0, min(l[i + 1], r[i]) - heights[i])\n        return ans     \n"
    },
    {
      "lang": "js",
      "code": "\n\nfor(let i = 0; i < height.length; i++) {\n    area += (h[i] - height[i]) * 1; // h为下雨之后的水位\n}\n\n"
    },
    {
      "lang": "js",
      "code": "\n\n/*\n * @lc app=leetcode id=42 lang=javascript\n *\n * [42] Trapping Rain Water\n *\n */\n/**\n * @param {number[]} height\n * @return {number}\n */\nvar trap = function(height) {\n    let max = 0;\n    let volumn = 0;\n    const leftMax = [];\n    const rightMax = [];\n\n    for(let i = 0; i < height.length; i++) {\n        leftMax[i] = max = Math.max(height[i], max);\n    }\n\n    max = 0;\n\n    for(let i = height.length - 1; i >= 0; i--) {\n        rightMax[i] = max = Math.max(height[i], max);\n    }\n\n    for(let i = 0; i < height.length; i++) {\n        volumn = volumn +  Math.min(leftMax[i], rightMax[i]) - height[i]\n    }\n\n    return volumn;\n};\n\n"
    }
  ]
}