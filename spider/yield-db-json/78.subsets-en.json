{
  "question": "78.subsets-en",
  "companys": [
    "TODO"
  ],
  "tags": [
    "TODO"
  ],
  "reslove": [
    {
      "lang": "js",
      "code": "\n\n/*\n * @lc app=leetcode id=78 lang=javascript\n *\n * [78] Subsets\n *\n * https://leetcode.com/problems/subsets/description/\n *\n * algorithms\n * Medium (51.19%)\n * Total Accepted:    351.6K\n * Total Submissions: 674.8K\n * Testcase Example:  '[1,2,3]'\n *\n * Given a set of distinct integers, nums, return all possible subsets (the\n * power set).\n * \n * Note: The solution set must not contain duplicate subsets.\n * \n * Example:\n * \n * \n * Input: nums = [1,2,3]\n * Output:\n * [\n * ‚Å† [3],\n * [1],\n * [2],\n * [1,2,3],\n * [1,3],\n * [2,3],\n * [1,2],\n * []\n * ]\n * \n */\nfunction backtrack(list, tempList, nums, start) {\n    list.push([...tempList]);\n    for(let i = start; i < nums.length; i++) {\n        tempList.push(nums[i]);\n        backtrack(list, tempList, nums, i + 1);\n        tempList.pop();\n    }\n}\n/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar subsets = function(nums) {\n    const list = [];\n    backtrack(list, [], nums, 0);\n    return list;\n};\n"
    }
  ]
}