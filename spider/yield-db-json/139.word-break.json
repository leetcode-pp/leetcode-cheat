{
  "question": "139.word-break",
  "companys": [
    "TODO"
  ],
  "tags": [
    "TODO"
  ],
  "reslove": [
    {
      "lang": "js",
      "code": "\n/*\n * @lc app=leetcode id=139 lang=javascript\n *\n * [139] Word Break\n *\n * https://leetcode.com/problems/word-break/description/\n *\n * algorithms\n * Medium (34.45%)\n * Total Accepted:    317.8K\n * Total Submissions: 913.9K\n * Testcase Example:  '\"leetcode\"\\n[\"leet\",\"code\"]'\n *\n * Given a non-empty string s and a dictionary wordDict containing a list of\n * non-empty words, determine if s can be segmented into a space-separated\n * sequence of one or more dictionary words.\n *\n * Note:\n *\n *\n * The same word in the dictionary may be reused multiple times in the\n * segmentation.\n * You may assume the dictionary does not contain duplicate words.\n *\n *\n * Example 1:\n *\n *\n * Input: s = \"leetcode\", wordDict = [\"leet\", \"code\"]\n * Output: true\n * Explanation: Return true because \"leetcode\" can be segmented as \"leet\n * code\".\n *\n *\n * Example 2:\n *\n *\n * Input: s = \"applepenapple\", wordDict = [\"apple\", \"pen\"]\n * Output: true\n * Explanation: Return true because \"applepenapple\" can be segmented as \"apple\n * pen apple\".\n * Note that you are allowed to reuse a dictionary word.\n *\n *\n * Example 3:\n *\n *\n * Input: s = \"catsandog\", wordDict = [\"cats\", \"dog\", \"sand\", \"and\", \"cat\"]\n * Output: false\n *\n *\n */\n/**\n * @param {string} s\n * @param {string[]} wordDict\n * @return {boolean}\n */\nvar wordBreak = function(s, wordDict) {\n  const dp = Array(s.length + 1);\n  dp[0] = true;\n  for (let i = 0; i < s.length + 1; i++) {\n    for (let word of wordDict) {\n      if (dp[i - word.length] && word.length <= i) {\n          if (s.substring(i - word.length, i) === word) {\n            dp[i] = true;\n          }\n      }\n    }\n  }\n\n  return dp[s.length] || false;\n};\n"
    }
  ]
}